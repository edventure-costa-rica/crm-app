{"version":3,"sources":["../../node_modules/browserify/node_modules/browser-pack/_prelude.js","components/index.js","components/hello.js","components/reservations.js","components/search.js","components/forms.js","../../node_modules/lodash/index.js"],"names":["module","exports","Hello","require","Search","Forms","Reservations","React","createClass","displayName","render","createElement","this","props","name","_","toOption","c","value","company","id","title","forKind","kind","HOTELS","COMPANIES","filter","map","TOURS","TRANSPORTS","Hotel","mixins","addons","LinkedStateMixin","getInitialState","pickUp","dropOff","res","reservation","defaults","Date","departure","toDateString","departure_time","dropoff_location","Boolean","join","arrival","arrival_time","pickup_location","assign","pick_up","drop_off","num_people","setDefaultRackPrice","ev","Number","target","state","price","setState","hiddenId","type","className","method","action","PaxField","required","linkState","TextField","SelectField","prompt","options","PriceField","onBlur","min","step","TransferField","query","results","loading","handleQueryChange","sanitized","String","trim","performSearch","debounce","$","ajax","url","data","q","success","isMounted","bind","hideSearch","console","log","content","SearchResults","onSubmit","e","preventDefault","htmlFor","onChange","autoComplete","placeholder","length","SearchLoading","result","SearchResult","phone","email","SearchNoResults","br","toLowerCase","href","defaultValue","valueLink","NumberField","range","pick","__spread","o","Array","isArray","opt","key","unshift","statics","ValidationRegExp","parsePax","parts","split","parseInt","total","children","disabled","parsts","reformat","pax","output","events","baseCompareAscending","other","valIsNull","valIsUndef","undefined","valIsReflexive","othIsNull","othIsUndef","othIsReflexive","baseFindIndex","array","predicate","fromRight","index","baseIndexOf","fromIndex","indexOfNaN","baseIsFunction","baseToString","charsLeftIndex","string","chars","indexOf","charAt","charsRightIndex","compareAscending","object","criteria","compareMultiple","orders","objCriteria","othCriteria","ordersLength","order","deburrLetter","letter","deburredLetters","escapeHtmlChar","chr","htmlEscapes","escapeRegExpChar","leadingChar","whitespaceChar","regexpEscapes","stringEscapes","escapeStringChar","isObjectLike","isSpace","charCode","replaceHolders","resIndex","PLACEHOLDER","sortedUniq","iteratee","seen","computed","trimmedLeftIndex","charCodeAt","trimmedRightIndex","unescapeHtmlChar","htmlUnescapes","runInContext","context","lodash","LazyWrapper","LodashWrapper","hasOwnProperty","call","wrapperClone","baseLodash","chainAll","actions","__wrapped__","__actions__","__chain__","__dir__","__filtered__","__iteratees__","__takeCount__","POSITIVE_INFINITY","__views__","lazyClone","arrayCopy","lazyReverse","clone","lazyValue","dir","isArr","isRight","arrLength","view","getView","start","end","iteratees","iterLength","takeCount","nativeMin","LARGE_ARRAY_SIZE","baseWrapperValue","reverse","outer","iterIndex","LAZY_MAP_FLAG","LAZY_FILTER_FLAG","MapCache","__data__","mapDelete","has","mapGet","mapHas","mapSet","SetCache","values","hash","nativeCreate","set","Set","push","cacheIndexOf","cache","isObject","cachePush","add","arrayConcat","othIndex","othLength","source","arrayEach","arrayEachRight","arrayEvery","arrayExtremum","comparator","exValue","current","arrayFilter","arrayMap","arrayPush","offset","arrayReduce","accumulator","initFromArray","arrayReduceRight","arraySome","arraySum","assignDefaults","objectValue","sourceValue","assignOwnDefaults","assignWith","customizer","keys","baseAssign","baseCopy","baseAt","collection","isNil","isArrayLike","propsLength","isIndex","baseCallback","func","thisArg","argCount","bindCallback","identity","baseMatches","property","baseMatchesProperty","baseClone","isDeep","stackA","stackB","initCloneArray","tag","objToString","isFunc","funcTag","objectTag","argsTag","cloneableTags","initCloneByTag","initCloneObject","baseForOwn","subValue","baseDelay","wait","args","TypeError","FUNC_ERROR_TEXT","setTimeout","apply","baseDifference","getIndexOf","isCommon","createCache","valuesLength","valuesIndex","baseEvery","baseEach","baseExtremum","baseFill","baseFilter","baseFind","eachFunc","retKey","baseFlatten","isStrict","isArguments","baseForIn","baseFor","keysIn","baseForOwnRight","baseForRight","baseFunctions","isFunction","baseGet","path","pathKey","toObject","baseIsEqual","isLoose","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","arrayTag","othTag","isTypedArray","objIsObj","othIsObj","isSameTag","equalByTag","objIsWrapped","othIsWrapped","equalArrays","equalObjects","pop","baseIsMatch","matchData","noCustomizer","objValue","srcValue","baseMap","getMatchData","isKey","isStrictComparable","toPath","baseSlice","last","baseMerge","isSrcArr","baseMergeDeep","mergeFunc","isPlainObject","toPlainObject","baseProperty","basePropertyDeep","basePullAt","indexes","previous","splice","baseRandom","max","nativeFloor","nativeRandom","baseReduce","initFromCollection","baseSome","baseSortBy","comparer","sort","baseSortByOrder","callback","getCallback","baseSum","baseUniq","isLarge","seenIndex","baseValues","baseWhile","isDrop","binaryIndex","retHighest","low","high","HALF_MAX_ARRAY_LENGTH","mid","binaryIndexBy","valIsNaN","isDef","isReflexive","setLow","MAX_ARRAY_INDEX","arguments","bufferClone","buffer","ArrayBuffer","byteLength","Uint8Array","composeArgs","partials","holders","holdersLength","argsIndex","argsLength","nativeMax","leftIndex","leftLength","composeArgsRight","holdersIndex","rightIndex","rightLength","createAggregator","setter","initializer","createAssigner","assigner","restParam","sources","guard","isIterateeCall","createBaseEach","getLength","isLength","iterable","createBaseFor","keysFunc","createBindWrapper","wrapper","fn","root","Ctor","createCtorWrapper","createCompounder","words","deburr","thisBinding","baseCreate","prototype","createCurry","flag","curryFunc","arity","createWrapper","createDefaults","createExtremum","toIterable","createFind","createFindIndex","createFindKey","objectFunc","createFlow","funcs","thru","getFuncName","funcName","getData","isLaziable","ARY_FLAG","CURRY_FLAG","PARTIAL_FLAG","REARG_FLAG","plant","createForEach","arrayFunc","createForIn","createForOwn","createObjectMapper","isMapKeys","mapped","createPadDir","createPadding","createPartial","partialFunc","createReduce","createHybridWrapper","bitmask","partialsRight","holdersRight","argPos","ary","isCurry","isCurryRight","argsHolders","newArgPos","newArity","newsHolders","newHoldersRight","newPartials","newPartialsRight","PARTIAL_RIGHT_FLAG","isCurryBound","BIND_FLAG","BIND_KEY_FLAG","newData","setData","isBind","isBindKey","reorder","isAry","CURRY_BOUND_FLAG","CURRY_RIGHT_FLAG","strLength","nativeIsFinite","padLength","repeat","nativeCeil","slice","createPartialWrapper","createRound","methodName","Math","number","precision","pow","createSortedIndex","mergeData","baseSetData","arrValue","othValue","boolTag","dateTag","errorTag","message","numberTag","regexpTag","stringTag","objProps","objLength","othProps","skipCtor","objCtor","constructor","othCtor","realNames","otherFunc","pairs","getNative","isNative","transforms","size","input","Object","arrayBufferTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","byteOffset","reFlags","exec","lastIndex","invokePath","reIsUint","test","MAX_SAFE_INTEGER","reIsPlainProp","reIsDeepProp","srcBitmask","newBitmask","isCombo","mergeDefaults","merge","pickByArray","pickByCallback","oldArray","shimKeys","allowIndexes","replace","rePropName","match","quote","reEscapeChar","chunk","compact","drop","n","dropRight","dropRightWhile","dropWhile","fill","first","flatten","flattenDeep","initial","lastIndexOf","pull","remove","rest","take","takeRight","takeRightWhile","takeWhile","uniq","isSorted","unzip","group","unzipWith","xor","zipObject","chain","tap","interceptor","wrapperChain","wrapperCommit","wrapperPlant","parent","wrapperReverse","wrapped","wrapperToString","wrapperValue","every","findWhere","find","includes","isString","pluck","reject","sample","toArray","rand","shuffle","some","sortBy","sortByOrder","where","after","temp","before","cancel","timeoutId","clearTimeout","maxTimeoutId","lastCalled","trailingCall","complete","isCalled","now","delayed","remaining","stamp","maxDelayed","trailing","debounced","leading","maxWait","leadingCall","memoize","resolver","memoized","get","Cache","negate","once","otherArgs","spread","throttle","wrap","cloneDeep","gt","gte","propertyIsEnumerable","isBoolean","isDate","isElement","nodeType","isEmpty","isEqual","isError","isFinite","isMatch","isNaN","isNumber","reIsNative","fnToString","reIsHostCtor","isNull","isRegExp","typedArrayTags","isUndefined","lt","lte","create","properties","functions","invert","multiValue","isProto","skipIndexes","nested","transform","valuesIn","inRange","random","floating","noMin","noMax","parseFloat","capitalize","toUpperCase","reLatin1","reComboMark","endsWith","position","escape","reHasUnescapedHtml","reUnescapedHtml","escapeRegExp","reHasRegExpChars","reRegExpChars","pad","radix","nativeParseInt","reHasHexPrefix","startsWith","template","otherOptions","settings","templateSettings","isEscaping","isEvaluating","imports","importsKeys","importsValues","interpolate","reNoMatch","reDelimiters","RegExp","reInterpolate","reEsTemplate","evaluate","sourceURL","templateCounter","escapeValue","interpolateValue","esTemplateValue","evaluateValue","reUnescapedString","variable","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","attempt","Function","trimLeft","trimRight","trunc","DEFAULT_TRUNC_LENGTH","omission","DEFAULT_TRUNC_OMISSION","separator","search","newEnd","substring","global","unescape","reHasEscapedHtml","reEscapedHtml","pattern","reWords","matches","constant","matchesProperty","mixin","isObj","methodNames","noConflict","oldDash","noop","propertyOf","times","MAX_ARRAY_LENGTH","uniqueId","prefix","idCounter","augend","addend","sum","contextProps","Error","arrayProto","objectProto","stringProto","toString","WeakMap","ceil","floor","nativeIsArray","nativeKeys","nativeNow","NEGATIVE_INFINITY","metaMap","support","reEscape","reEvaluate","baseEachRight","count","HOT_SPAN","HOT_COUNT","difference","findIndex","findLastIndex","intersection","arrays","caches","pullAt","sortedIndex","sortedLastIndex","union","without","zip","zipWith","wrapperConcat","at","countBy","findLast","forEach","forEachRight","groupBy","indexBy","invoke","isProp","partition","reduce","reduceRight","sortByAll","getTime","bindAll","bindKey","curry","curryRight","defer","delay","flow","flowRight","modArgs","partial","partialRight","rearg","defaultsDeep","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","mapKeys","mapValues","omit","camelCase","word","kebabCase","padLeft","padRight","snakeCase","startCase","methodOf","round","backflow","collect","compose","each","eachRight","extend","methods","select","tail","unique","all","any","contains","eq","detect","foldl","foldr","head","include","inject","VERSION","filtered","isFilter","takeName","dropName","operationName","createCallback","checkIteratee","retUnwrapped","lodashFunc","isHybrid","isLazy","useLazy","onlyLazy","chainName","names","commit","concat","run","toJSON","valueOf","mapTag","setTag","weakMapTag","upper","lower","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","&","<",">","\"","'","`","&amp;","&lt;","&gt;","&quot;","&#39;","&#96;","objectTypes","function","0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","a","b","d","f","r","t","u","v","x","\\","\n","\r"," "," ","freeExports","freeModule","freeGlobal","freeSelf","self","freeWindow","window","moduleExports","define","amd"],"mappings":"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,EJNbC,KIMa,CFJgC,CEIzB,AJNZD,AEEsC,CEIxB,CFJ0B,EAAE,CEIxB,CAAC,ADNG,EHAd,GIMgB,AFJyB,CEIxB,AFJyB,CAAC,CEItB,CAAA,EAAA,GJLrCE,AECkE,CAAC,IAAI,CFDhEF,IECqE,IFD7D,AECiE,CAAC,CAAC,CAAC,CAAC,OFApFG,aAAcH,QAAQ;EAHtB,AGEA,EDEE,GFJG,EAAE,CIQE,AFJD,GAAG,CEIE,CAAC,CJRA,CAAC,AGEA,EAAE,CCME,CAAC,CFJA,CAAC,GEIK,AJRF,CAAC,EEIE,CAAC,ACFA,ODEO,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC;AEK7D,EJRE,EEIE,ACFA,ICMY,AJRR,CIQQ,AFJP,CFJC,CIQM,ADNL,CDEC,ACFA,KHFK,AGEA,CHFC,CGEC,EDEE,ACFA,CDEC,CCFC,KHFK,AEIA,CFJC,AEIA,CCFC,EAAE,EAAE,EDEE,ACFA,CDEC,MAAM,ACFA,CDEC,CAAC,ACFA,CDEC,GAAG,CAAC,ACFA,CAAC,ODEO,CAAC;AAC3D,ACFA,EHFE,CGEC,CDEC,GFJG,EAAE,KEIK,EFJE,CAAC,AEIA,SFJS,AEIA,CFJC,AEIA,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;EFHpE,MIQM,MJRM,EAAE,OAAO,CAAC,IIQhB,OAAM,EAAA,CAAA,CAAC,CJRyB,CAAC,EIQ1B,EAAI,CAAC,MAAA,EAAM,CAAC,SAAA,EAAS,CAAC,cAAA,EAAc;AFHnD,CFJC,CAAC,AGEA,EDEE,KAAK,GAAG,GEIG,EFJE,CAAC,CCFC,EAAE,ECMN,EAAQ,CAAE,GFJI,CAAC,ACFA,EAAE,CCMA,CAAC,ADNC,ICMG,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAC;ADLtD,EDEE,ECFE,IAAI,KDEK,EEIE,AFJA,ECFE,GAAG,EDEE,ICFI,CCMX,ADNY,ECMA,ADNE,CCMA,ADNC,ICMG,CAAC,CDNE,CAAC,GCME,CAAC,CDNE,CAAC,CAAC,IAAI,EAAE,CAAC,ECMC,EAAC;AFHrD,EAAE,MAAM,EAAE,CAAC,IEII,CFJC,CAAC,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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports = {\n  Hello: require('./hello'),\n  Search: require('./search'),\n  Forms: require('./forms'),\n  Reservations: require('./reservations')\n};\n","\nmodule.exports = React.createClass({\n  displayName: 'Hello',\n  render: function() {\n    return <h1>Hello, {this.props.name}</h1>\n  }\n});\n","var _ = require('lodash');\nvar Forms = require('./forms');\n\nvar toOption = function(c) { return { value: c.company.id, title: c.company.name } },\n    forKind = function(kind) { return function(c) { return c.company.kind === kind } },\n    HOTELS = COMPANIES.filter(forKind('hotel')).map(toOption),\n    TOURS = COMPANIES.filter(forKind('tour')).map(toOption),\n    TRANSPORTS = COMPANIES.filter(forKind('transport')).map(toOption);\n\nvar Hotel = React.createClass({\n  displayName: 'Hotel',\n  mixins: [React.addons.LinkedStateMixin],\n\n  getInitialState: function() {\n    var res = this.props.reservation,\n        defaults = this.props.defaults || {},\n        pickUp, dropOff;\n    \n    if (res) {\n      dropOff = [\n        new Date(res.departure).toDateString(),\n        res.departure_time, res.dropoff_location\n      ].filter(Boolean).join(' ');\n\n      pickUp = [\n        new Date(res.arrival).toDateString(),\n        res.arrival_time, res.pickup_location\n      ].filter(Boolean).join(' ');\n\n      return _.assign({\n        pick_up: pickUp,\n        drop_off: dropOff\n      }, res);\n    }\n    else {\n      return {\n        num_people: defaults.num_people,\n        arrival: defaults.arrival,\n        arrival_time: defaults.arrival_time,\n        dropoff_location: defaults.dropoff_location,\n        departure: defaults.departure,\n        departure_time: defaults.departure_time,\n        pickup_location: defaults.pickup_location\n      };\n    }\n  },\n\n  setDefaultRackPrice: function(ev) {\n    var value = Number(ev.target.value);\n\n    if (! this.state.price && value) {\n      this.setState({price: value})\n    }\n  },\n\n  render: function() {\n    var hiddenId;\n\n    if (this.state.id) {\n      hiddenId = (\n        <input type=\"hidden\" name=\"reservation[id]\" value={this.state.id} />\n      );\n    }\n\n    return (\n      <div className=\"row\">\n        <form className=\"form\" method=\"post\" action={this.props.action}>\n          {hiddenId}\n\n          <div className=\"col-xs-12 col-sm-3\">\n            <Forms.PaxField id=\"reservation-pax\" name=\"reservation[pax]\"\n                            title=\"Pax\" required={true}\n                            value={this.linkState('num_people')} />\n          </div>\n\n          <div className=\"col-xs-12 col-sm-6\">\n            <Forms.TextField id=\"reservation-services\" name=\"reservation[services]\"\n                             title=\"Services\" value={this.linkState('services')} />\n          </div>\n\n          <div className=\"col-xs-12 col-sm-3\">\n            <Forms.SelectField id=\"reservation-company_id\" name=\"reservation[company_id]\"\n                              title=\"Hotel\" prompt=\"Select a Company\" required={true}\n                              value={this.linkState('company_id')} options={HOTELS} />\n          </div>\n\n          <div className=\"col-xs-6 col-sm-3\">\n            <Forms.PriceField id=\"reservation-net_price\" name=\"reservation[net_price]\"\n                              title=\"Net Price\"\n                              onBlur={this.setDefaultRackPrice}\n                              value={this.linkState('net_price')}\n                              required={true} min={0} step={0.01} />\n          </div>\n\n          <div className=\"col-xs-6 col-sm-3\">\n            <Forms.PriceField id=\"reservation-price\" name=\"reservation[price]\"\n                              title=\"Rack Price\"\n                              value={this.linkState('price')}\n                              required={true} min={0} step={0.01} />\n          </div>\n\n          <div className=\"col-xs-6 col-sm-3\">\n            <Forms.TransferField id=\"reservation-pick_up\" name=\"reservation[pick_up]\"\n                                 title=\"Pick Up\"\n                                 value={this.linkState('pickUp')}\n                                 required={true} />\n          </div>\n\n          <div className=\"col-xs-6 col-sm-3\">\n            <Forms.TransferField id=\"reservation-drop_off\" name=\"reservation[drop_off]\"\n                                 title=\"Drop Off\"\n                                 value={this.linkState('dropOff')}\n                                 required={true} />\n          </div>\n\n          <div className=\"col-xs-12 text-right\">\n            <button className=\"btn btn-primary\" type=\"submit\">\n              <i className=\"glyphicon glyphicon-ok\"></i>\n              &nbsp; Save\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n});\n\nmodule.exports = {\n  Hotel: Hotel\n}\n","var _ = require('lodash');\n\nvar Search = React.createClass({\n  getInitialState: function() {\n    return {query: '', results: [], loading: false}\n  },\n\n  handleQueryChange: function(ev) {\n    var sanitized = String(ev.target.value).trim();\n\n    if (sanitized) {\n      this.setState({query: sanitized, loading: true});\n      this.performSearch();\n    }\n\n    else {\n      this.setState(this.getInitialState());\n    }\n  },\n\n  performSearch: _.debounce(function performSearch() {\n    $.ajax({\n      url: this.props.url,\n      data: {q: this.state.query},\n      success: function(results) {\n        if (this.isMounted()) {\n          this.setState({loading: false, results: results});\n        }\n\n      }.bind(this)\n    })\n  }),\n\n  hideSearch: function() {\n    this.setState({query: ''})\n  },\n\n  render: function() {\n    console.log('Search', this.state);\n\n    var content = (\n        <SearchResults data={this.state.results}\n                       loading={this.state.loading} />\n    );\n\n    return (\n        <form action={this.props.url}\n              onSubmit={function(e) { e.preventDefault() }}\n              className=\"navbar-form navbar-left\">\n          <div className=\"form-group\">\n            <label htmlFor=\"search-query\" className=\"sr-only\">Search</label>\n            <input type=\"search\" name=\"q\"\n                   value={this.state.query}\n                   onChange={this.handleQueryChange}\n                   onBlur={this.hideSearch}\n                   id=\"search-query\"\n                   className=\"form-control\"\n                   autoComplete=\"off\"\n                   placeholder=\"Search Clients\" />\n\n          </div>\n          {this.state.query.length ? content : '' }\n        </form>\n    )\n  }\n});\n\nvar SearchResults = React.createClass({\n  render: function () {\n    var content;\n    console.log('SearchResults', this.props);\n\n    if (this.props.loading) {\n      content = <SearchLoading />\n    }\n\n    else if (this.props.data.length) {\n      content = _.map(this.props.data, function (result) {\n        return <SearchResult url={result.url}\n                             name={result.name}\n                             phone={result.phone}\n                             email={result.email}/>\n\n      })\n    }\n\n    else {\n      content = <SearchNoResults />\n    }\n\n    return (\n        <div id=\"search-results\" className=\"list-group\">\n          {content}\n        </div>\n    )\n  }\n});\n\nvar SearchResult = React.createClass({\n  render: function () {\n    var email, phone, br = <br/>;\n    console.log('SearchResult', this.props);\n\n    if (this.props.email) {\n      email = (\n        <span>\n          <i className=\"glyphicon glyphicon-envelope\"/>\n          &nbsp; {String(this.props.email).toLowerCase()}\n        </span>\n      )\n    }\n\n    if (this.props.phone) {\n      phone = (\n        <span>\n          <i className=\"glyphicon glyphicon-phone\"/>\n          &nbsp; {this.props.phone}\n        </span>\n      )\n    }\n\n    return (\n        <a href={this.props.url} className=\"list-group-item\">\n          <h4 className=\"list-group-item-heading\">{this.props.name}</h4>\n          <p className=\"list-group-item-text\">\n            {email} {email && phone ? br : ''} {phone}\n          </p>\n        </a>\n    )\n  }\n});\n\nvar SearchNoResults = React.createClass({\n  render: function() {\n    console.log('SearchNoResults');\n    return (\n        <div className=\"list-group-item\">\n          <h4 className=\"list-group-item-heading\">\n            <i className=\"glyphicon glyphicon-ban-circle\"/>\n            &nbsp; No Results\n          </h4>\n          <p className=\"list-group-item-text\">\n            Try changing your search criteria\n          </p>\n        </div>\n    )\n  }\n});\n\nvar SearchLoading = React.createClass({\n  render: function() {\n    console.log('SearchLoading');\n    return (\n        <div className=\"list-group-item\">\n          <h4 className=\"list-group-item-heading\">\n            <i className=\"glyphicon glyphicon-refresh spin\"/>\n            &nbsp; Loading...\n          </h4>\n\n          <p className=\"list-group-item-text\">\n            Please wait\n          </p>\n        </div>\n    )\n  }\n});\n\n\nmodule.exports = Search;\n","var _ = require('lodash');\n\nvar TextField = React.createClass({\n  displayName: 'TextField',\n\n  render: function() {\n    return (\n      <div className=\"form-group\">\n        <label htmlFor={this.props.id}>\n          {this.props.title}\n        </label>\n\n        <input type=\"text\" className='form-control'\n               required={Boolean(this.props.required)}\n               defaultValue={this.props.defaultValue}\n               valueLink={this.props.value}\n               name={this.props.name}\n               id={this.props.id} />\n      </div>\n    )\n  }\n});\n\nvar NumberField = React.createClass({\n  displayName: 'NumberField',\n\n  render: function() {\n    var range = _.pick(this.props, ['min', 'max', 'step']);\n\n    return (\n      <div className=\"form-group\">\n        <label htmlFor={this.props.id}>\n          {this.props.title}\n        </label>\n        \n        <input type=\"number\" className='form-control'\n               placeholder={this.props.title}\n               required={Boolean(this.props.required)}\n               defaultValue={this.props.defaultValue}\n               valueLink={this.props.value} {...range}\n               name={this.props.name}\n               id={this.props.id} />\n      </div>\n    );\n  }\n});\n\nvar SelectField = React.createClass({\n  displayName: 'SelectField',\n\n  render: function() {\n    var options = _(this.props.options).map(function (o) {\n      if (typeof o !== 'object') {\n        return {value: o, title: String(o)}\n      }\n      else if (Array.isArray(o)) {\n        return {value: o[0], title: (o[1] || o[0])}\n      }\n      else {\n        return o;\n      }\n    }).map(function (opt) {\n      return (\n        <option key={opt.value} value={opt.value}>{opt.title}</option>\n      );\n    }).value();\n\n    if (this.props.prompt) {\n      options.unshift(\n        <option key=\"prompt\">{this.props.prompt}</option>\n      );\n    }\n\n    return (\n      <div className=\"form-group\">\n        <label htmlFor={this.props.id}>\n          {this.props.title}\n        </label>\n        \n        <select className=\"form-control\" \n                valueLink={this.props.value}\n                id={this.props.id} \n                name={this.props.name}>\n          {options}\n        </select>\n      </div>\n    )\n  }\n});\n\nvar PaxField = React.createClass({\n  displayName: 'PaxField',\n  statics: {\n    ValidationRegExp: /^\\d+(?:\\/\\d+){0,2}/,\n\n    parsePax: function(value) {\n      var parts = String(value).split('/').map(parseInt);\n\n      return {\n        total: (parts[0] || 0),\n        children: (parts[1] || 0), \n        disabled: (parsts[2] || 0)\n      };\n    },\n\n    reformat: function(value) {\n      var pax = this.parsePax(value);\n      var output = String(pax.total);\n      \n      if (pax.children) {\n        output += '/' + pax.children;\n      }\n\n      if (pax.disabled) {\n        if (! pax.children) output += '/0';\n        output += '/' + pax.disabled;\n      }\n\n      return output;\n    },\n  },\n\n  render: function() {\n    var events = _.pick(this.props, 'onBlur onFocus onChange'.split(' '));\n\n    return (\n      <div className=\"form-group\">\n        <label htmlFor={this.props.id}>\n          {this.props.title}\n        </label>\n        \n        <div className=\"input-group\">\n          <div className=\"input-group-addon\">\n            <i className=\"glyphicon glyphicon-user\" />\n          </div>\n\n          <input type=\"text\" className=\"form-control\" {...events}\n                 placeholder=\"pax/children/disabled\"\n                 required={Boolean(this.props.required)}\n                 valueLink={this.props.value}\n                 name={this.props.name}\n                 id={this.props.id} />\n\n        </div>\n      </div>\n    );\n  }\n});\n\nvar TransferField = React.createClass({\n  displayName: 'TransferField',\n\n  render: function() {\n    var events = _.pick(this.props, 'onBlur onFocus onChange'.split(' '));\n\n    return (\n      <div className=\"form-group\">\n        <label htmlFor={this.props.id}>\n          {this.props.title}\n        </label>\n        \n        <div className=\"input-group\">\n          <div className=\"input-group-addon\">\n            <i className=\"glyphicon glyphicon-transfer\" />\n          </div>\n\n          <input type=\"text\" className=\"form-control\" {...events}\n                 placeholder=\"date, time, and location\"\n                 required={Boolean(this.props.required)}\n                 valueLink={this.props.value}\n                 name={this.props.name}\n                 id={this.props.id} />\n\n        </div>\n      </div>\n    );\n  }\n});\n\nvar PriceField = React.createClass({\n  displayName: 'PriceField',\n\n  render: function() {\n    var range = _.pick(this.props, ['min', 'max', 'step']);\n    range.min = range.min || 0;\n\n    var events = _.pick(this.props, 'onBlur onFocus onChange'.split(' '));\n\n    return (\n      <div className=\"form-group\">\n        <label htmlFor={this.props.id}>\n          {this.props.title}\n        </label>\n        \n        <div className=\"input-group\">\n          <div className=\"input-group-addon\">\n            <i className=\"glyphicon glyphicon-usd\" />\n          </div>\n\n          <input type=\"number\" className=\"form-control\" {...events}\n                 required={Boolean(this.props.required)}\n                 defaultValue={this.props.defaultValue}\n                 valueLink={this.props.value} {...range}\n                 name={this.props.name}\n                 id={this.props.id} />\n\n        </div>\n      </div>\n    );\n  }\n});\n\nmodule.exports = {\n  PaxField: PaxField,\n  PriceField: PriceField,\n  TransferField: TransferField,\n  TextField: TextField,\n  NumberField: NumberField,\n  SelectField: SelectField\n}\n","/**\n * @license\n * lodash 3.10.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern -d -o ./index.js`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '3.10.1';\n\n  /** Used to compose bitmasks for wrapper metadata. */\n  var BIND_FLAG = 1,\n      BIND_KEY_FLAG = 2,\n      CURRY_BOUND_FLAG = 4,\n      CURRY_FLAG = 8,\n      CURRY_RIGHT_FLAG = 16,\n      PARTIAL_FLAG = 32,\n      PARTIAL_RIGHT_FLAG = 64,\n      ARY_FLAG = 128,\n      REARG_FLAG = 256;\n\n  /** Used as default options for `_.trunc`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect when a function becomes hot. */\n  var HOT_COUNT = 150,\n      HOT_SPAN = 16;\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2;\n\n  /** Used as the `TypeError` message for \"Functions\" methods. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      weakMapTag = '[object WeakMap]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n      reUnescapedHtml = /[&<>\"'`]/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g;\n\n  /**\n   * Used to match `RegExp` [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns)\n   * and those outlined by [`EscapeRegExpPattern`](http://ecma-international.org/ecma-262/6.0/#sec-escaperegexppattern).\n   */\n  var reRegExpChars = /^[:!,]|[\\\\^$.*+?()[\\]{}|\\/]|(^[0-9a-fA-Fnrtuvx])|([\\n\\r\\u2028\\u2029])/g,\n      reHasRegExpChars = RegExp(reRegExpChars.source);\n\n  /** Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks). */\n  var reComboMark = /[\\u0300-\\u036f\\ufe20-\\ufe23]/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /** Used to match [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components). */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect hexadecimal string values. */\n  var reHasHexPrefix = /^0[xX]/;\n\n  /** Used to detect host constructors (Safari > 5). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^\\d+$/;\n\n  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to match words to create compound words. */\n  var reWords = (function() {\n    var upper = '[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]',\n        lower = '[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]+';\n\n    return RegExp(upper + '+(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');\n  }());\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'ArrayBuffer', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Math', 'Number',\n    'Object', 'RegExp', 'Set', 'String', '_', 'clearTimeout', 'isFinite',\n    'parseFloat', 'parseInt', 'setTimeout', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dateTag] = typedArrayTags[errorTag] =\n  typedArrayTags[funcTag] = typedArrayTags[mapTag] =\n  typedArrayTags[numberTag] = typedArrayTags[objectTag] =\n  typedArrayTags[regexpTag] = typedArrayTags[setTag] =\n  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\n  cloneableTags[dateTag] = cloneableTags[float32Tag] =\n  cloneableTags[float64Tag] = cloneableTags[int8Tag] =\n  cloneableTags[int16Tag] = cloneableTags[int32Tag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[stringTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[mapTag] = cloneableTags[setTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map latin-1 supplementary letters to basic latin letters. */\n  var deburredLetters = {\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '`': '&#96;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\",\n    '&#96;': '`'\n  };\n\n  /** Used to determine if values are of the language type `Object`. */\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  /** Used to escape characters for inclusion in compiled regexes. */\n  var regexpEscapes = {\n    '0': 'x30', '1': 'x31', '2': 'x32', '3': 'x33', '4': 'x34',\n    '5': 'x35', '6': 'x36', '7': 'x37', '8': 'x38', '9': 'x39',\n    'A': 'x41', 'B': 'x42', 'C': 'x43', 'D': 'x44', 'E': 'x45', 'F': 'x46',\n    'a': 'x61', 'b': 'x62', 'c': 'x63', 'd': 'x64', 'e': 'x65', 'f': 'x66',\n    'n': 'x6e', 'r': 'x72', 't': 'x74', 'u': 'x75', 'v': 'x76', 'x': 'x78'\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Detect free variable `exports`. */\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global && global.Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = objectTypes[typeof self] && self && self.Object && self;\n\n  /** Detect free variable `window`. */\n  var freeWindow = objectTypes[typeof window] && window && window.Object && window;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n  /**\n   * Used as a reference to the global object.\n   *\n   * The `this` value is used if it's the global object to avoid Greasemonkey's\n   * restricted `window` object, otherwise the `window` object is used.\n   */\n  var root = freeGlobal || ((freeWindow !== (this && this.window)) && freeWindow) || freeSelf || this;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The base implementation of `compareAscending` which compares values and\n   * sorts them in ascending order without guaranteeing a stable sort.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {number} Returns the sort order indicator for `value`.\n   */\n  function baseCompareAscending(value, other) {\n    if (value !== other) {\n      var valIsNull = value === null,\n          valIsUndef = value === undefined,\n          valIsReflexive = value === value;\n\n      var othIsNull = other === null,\n          othIsUndef = other === undefined,\n          othIsReflexive = other === other;\n\n      if ((value > other && !othIsNull) || !valIsReflexive ||\n          (valIsNull && !othIsUndef && othIsReflexive) ||\n          (valIsUndef && othIsReflexive)) {\n        return 1;\n      }\n      if ((value < other && !valIsNull) || !othIsReflexive ||\n          (othIsNull && !valIsUndef && valIsReflexive) ||\n          (othIsUndef && valIsReflexive)) {\n        return -1;\n      }\n    }\n    return 0;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromRight) {\n    var length = array.length,\n        index = fromRight ? length : -1;\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without support for binary searches.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    if (value !== value) {\n      return indexOfNaN(array, fromIndex);\n    }\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isFunction` without support for environments\n   * with incorrect `typeof` results.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n   */\n  function baseIsFunction(value) {\n    // Avoid a Chakra JIT bug in compatibility modes of IE 11.\n    // See https://github.com/jashkenas/underscore/issues/1621 for more details.\n    return typeof value == 'function' || false;\n  }\n\n  /**\n   * Converts `value` to a string if it's not one. An empty string is returned\n   * for `null` or `undefined` values.\n   *\n   * @private\n   * @param {*} value The value to process.\n   * @returns {string} Returns the string.\n   */\n  function baseToString(value) {\n    return value == null ? '' : (value + '');\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the first character not found in `chars`.\n   */\n  function charsLeftIndex(string, chars) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the last character not found in `chars`.\n   */\n  function charsRightIndex(string, chars) {\n    var index = string.length;\n\n    while (index-- && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.sortBy` to compare transformed elements of a collection and stable\n   * sort them in ascending order.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareAscending(object, other) {\n    return baseCompareAscending(object.criteria, other.criteria) || (object.index - other.index);\n  }\n\n  /**\n   * Used by `_.sortByOrder` to compare multiple properties of a value to another\n   * and stable sort them.\n   *\n   * If `orders` is unspecified, all valuess are sorted in ascending order. Otherwise,\n   * a value is sorted in ascending order if its corresponding order is \"asc\", and\n   * descending if \"desc\".\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {boolean[]} orders The order to sort by for each property.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareMultiple(object, other, orders) {\n    var index = -1,\n        objCriteria = object.criteria,\n        othCriteria = other.criteria,\n        length = objCriteria.length,\n        ordersLength = orders.length;\n\n    while (++index < length) {\n      var result = baseCompareAscending(objCriteria[index], othCriteria[index]);\n      if (result) {\n        if (index >= ordersLength) {\n          return result;\n        }\n        var order = orders[index];\n        return result * ((order === 'asc' || order === true) ? 1 : -1);\n      }\n    }\n    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n    // that causes it, under certain circumstances, to provide the same value for\n    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n    // for more details.\n    //\n    // This also ensures a stable sort in V8 and other engines.\n    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.\n    return object.index - other.index;\n  }\n\n  /**\n   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  function deburrLetter(letter) {\n    return deburredLetters[letter];\n  }\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeHtmlChar(chr) {\n    return htmlEscapes[chr];\n  }\n\n  /**\n   * Used by `_.escapeRegExp` to escape characters for inclusion in compiled regexes.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @param {string} leadingChar The capture group for a leading character.\n   * @param {string} whitespaceChar The capture group for a whitespace character.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeRegExpChar(chr, leadingChar, whitespaceChar) {\n    if (leadingChar) {\n      chr = regexpEscapes[chr];\n    } else if (whitespaceChar) {\n      chr = stringEscapes[chr];\n    }\n    return '\\\\' + chr;\n  }\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n   */\n  function indexOfNaN(array, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 0 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var other = array[index];\n      if (other !== other) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Checks if `value` is object-like.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   */\n  function isObjectLike(value) {\n    return !!value && typeof value == 'object';\n  }\n\n  /**\n   * Used by `trimmedLeftIndex` and `trimmedRightIndex` to determine if a\n   * character code is whitespace.\n   *\n   * @private\n   * @param {number} charCode The character code to inspect.\n   * @returns {boolean} Returns `true` if `charCode` is whitespace, else `false`.\n   */\n  function isSpace(charCode) {\n    return ((charCode <= 160 && (charCode >= 9 && charCode <= 13) || charCode == 32 || charCode == 160) || charCode == 5760 || charCode == 6158 ||\n      (charCode >= 8192 && (charCode <= 8202 || charCode == 8232 || charCode == 8233 || charCode == 8239 || charCode == 8287 || charCode == 12288 || charCode == 65279)));\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      if (array[index] === placeholder) {\n        array[index] = PLACEHOLDER;\n        result[++resIndex] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * An implementation of `_.uniq` optimized for sorted arrays without support\n   * for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} [iteratee] The function invoked per iteration.\n   * @returns {Array} Returns the new duplicate-value-free array.\n   */\n  function sortedUniq(array, iteratee) {\n    var seen,\n        index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index],\n          computed = iteratee ? iteratee(value, index, array) : value;\n\n      if (!index || seen !== computed) {\n        seen = computed;\n        result[++resIndex] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the first non-whitespace character.\n   */\n  function trimmedLeftIndex(string) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the last non-whitespace character.\n   */\n  function trimmedRightIndex(string) {\n    var index = string.length;\n\n    while (index-- && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  function unescapeHtmlChar(chr) {\n    return htmlUnescapes[chr];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the given `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @category Utility\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // using `context` to mock `Date#getTime` use in `_.now`\n   * var mock = _.runInContext({\n   *   'Date': function() {\n   *     return { 'getTime': getTimeMock };\n   *   }\n   * });\n   *\n   * // or creating a suped-up `defer` in Node.js\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  function runInContext(context) {\n    // Avoid issues with some ES3 environments that attempt to use values, named\n    // after built-in constructors like `Object`, for the creation of literals.\n    // ES5 clears this up by stating that literals must use built-in constructors.\n    // See https://es5.github.io/#x11.1.5 for more details.\n    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\n    /** Native constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Number = context.Number,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for native method references. */\n    var arrayProto = Array.prototype,\n        objectProto = Object.prototype,\n        stringProto = String.prototype;\n\n    /** Used to resolve the decompiled source of functions. */\n    var fnToString = Function.prototype.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /**\n     * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var objToString = objectProto.toString;\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Native method references. */\n    var ArrayBuffer = context.ArrayBuffer,\n        clearTimeout = context.clearTimeout,\n        parseFloat = context.parseFloat,\n        pow = Math.pow,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        Set = getNative(context, 'Set'),\n        setTimeout = context.setTimeout,\n        splice = arrayProto.splice,\n        Uint8Array = context.Uint8Array,\n        WeakMap = getNative(context, 'WeakMap');\n\n    /* Native method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeCreate = getNative(Object, 'create'),\n        nativeFloor = Math.floor,\n        nativeIsArray = getNative(Array, 'isArray'),\n        nativeIsFinite = context.isFinite,\n        nativeKeys = getNative(Object, 'keys'),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = getNative(Date, 'now'),\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random;\n\n    /** Used as references for `-Infinity` and `Infinity`. */\n    var NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY,\n        POSITIVE_INFINITY = Number.POSITIVE_INFINITY;\n\n    /** Used as references for the maximum length and index of an array. */\n    var MAX_ARRAY_LENGTH = 4294967295,\n        MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n        HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n    /**\n     * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n     * of an array-like value.\n     */\n    var MAX_SAFE_INTEGER = 9007199254740991;\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit chaining.\n     * Methods that operate on and return arrays, collections, and functions can\n     * be chained together. Methods that retrieve a single value or may return a\n     * primitive value will automatically end the chain returning the unwrapped\n     * value. Explicit chaining may be enabled using `_.chain`. The execution of\n     * chained methods is lazy, that is, execution is deferred until `_#value`\n     * is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n     * fusion is an optimization strategy which merge iteratee calls; this can help\n     * to avoid the creation of intermediate data structures and greatly reduce the\n     * number of iteratee executions.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`,\n     * `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `compact`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`,\n     * `first`, `initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`,\n     * `slice`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `toArray`,\n     * and `where`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,\n     * `callback`, `chain`, `chunk`, `commit`, `compact`, `concat`, `constant`,\n     * `countBy`, `create`, `curry`, `debounce`, `defaults`, `defaultsDeep`,\n     * `defer`, `delay`, `difference`, `drop`, `dropRight`, `dropRightWhile`,\n     * `dropWhile`, `fill`, `filter`, `flatten`, `flattenDeep`, `flow`, `flowRight`,\n     * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,\n     * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,\n     * `invoke`, `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`,\n     * `matchesProperty`, `memoize`, `merge`, `method`, `methodOf`, `mixin`,\n     * `modArgs`, `negate`, `omit`, `once`, `pairs`, `partial`, `partialRight`,\n     * `partition`, `pick`, `plant`, `pluck`, `property`, `propertyOf`, `pull`,\n     * `pullAt`, `push`, `range`, `rearg`, `reject`, `remove`, `rest`, `restParam`,\n     * `reverse`, `set`, `shuffle`, `slice`, `sort`, `sortBy`, `sortByAll`,\n     * `sortByOrder`, `splice`, `spread`, `take`, `takeRight`, `takeRightWhile`,\n     * `takeWhile`, `tap`, `throttle`, `thru`, `times`, `toArray`, `toPlainObject`,\n     * `transform`, `union`, `uniq`, `unshift`, `unzip`, `unzipWith`, `values`,\n     * `valuesIn`, `where`, `without`, `wrap`, `xor`, `zip`, `zipObject`, `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clone`, `cloneDeep`,\n     * `deburr`, `endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`,\n     * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`,\n     * `floor`, `get`, `gt`, `gte`, `has`, `identity`, `includes`, `indexOf`,\n     * `inRange`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,\n     * `isEmpty`, `isEqual`, `isError`, `isFinite` `isFunction`, `isMatch`,\n     * `isNative`, `isNaN`, `isNull`, `isNumber`, `isObject`, `isPlainObject`,\n     * `isRegExp`, `isString`, `isUndefined`, `isTypedArray`, `join`, `kebabCase`,\n     * `last`, `lastIndexOf`, `lt`, `lte`, `max`, `min`, `noConflict`, `noop`,\n     * `now`, `pad`, `padLeft`, `padRight`, `parseInt`, `pop`, `random`, `reduce`,\n     * `reduceRight`, `repeat`, `result`, `round`, `runInContext`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedLastIndex`, `startCase`,\n     * `startsWith`, `sum`, `template`, `trim`, `trimLeft`, `trimRight`, `trunc`,\n     * `unescape`, `uniqueId`, `value`, and `words`\n     *\n     * The wrapper method `sample` will return a wrapped value when `n` is provided,\n     * otherwise an unwrapped value is returned.\n     *\n     * @name _\n     * @constructor\n     * @category Chain\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // returns an unwrapped value\n     * wrapped.reduce(function(total, n) {\n     *   return total + n;\n     * });\n     * // => 6\n     *\n     * // returns a wrapped value\n     * var squares = wrapped.map(function(n) {\n     *   return n * n;\n     * });\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__chain__') && hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The function whose prototype all chaining wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n     * @param {Array} [actions=[]] Actions to peform to resolve the unwrapped value.\n     */\n    function LodashWrapper(value, chainAll, actions) {\n      this.__wrapped__ = value;\n      this.__actions__ = actions || [];\n      this.__chain__ = !!chainAll;\n    }\n\n    /**\n     * An object environment feature flags.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    var support = lodash.support = {};\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB). Change the following template settings to use\n     * alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type string\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type Object\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type Function\n         */\n        '_': lodash\n      }\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = POSITIVE_INFINITY;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = arrayCopy(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = arrayCopy(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = arrayCopy(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || arrLength < LARGE_ARRAY_SIZE || (arrLength == length && takeCount == length)) {\n        return baseWrapperValue((isRight && isArr) ? array.reverse() : array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a cache object to store key/value pairs.\n     *\n     * @private\n     * @static\n     * @name Cache\n     * @memberOf _.memoize\n     */\n    function MapCache() {\n      this.__data__ = {};\n    }\n\n    /**\n     * Removes `key` and its value from the cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed successfully, else `false`.\n     */\n    function mapDelete(key) {\n      return this.has(key) && delete this.__data__[key];\n    }\n\n    /**\n     * Gets the cached value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the cached value.\n     */\n    function mapGet(key) {\n      return key == '__proto__' ? undefined : this.__data__[key];\n    }\n\n    /**\n     * Checks if a cached value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapHas(key) {\n      return key != '__proto__' && hasOwnProperty.call(this.__data__, key);\n    }\n\n    /**\n     * Sets `value` to `key` of the cache.\n     *\n     * @private\n     * @name set\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to cache.\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache object.\n     */\n    function mapSet(key, value) {\n      if (key != '__proto__') {\n        this.__data__[key] = value;\n      }\n      return this;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates a cache object to store unique values.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var length = values ? values.length : 0;\n\n      this.data = { 'hash': nativeCreate(null), 'set': new Set };\n      while (length--) {\n        this.push(values[length]);\n      }\n    }\n\n    /**\n     * Checks if `value` is in `cache` mimicking the return signature of\n     * `_.indexOf` by returning `0` if the value is found, else `-1`.\n     *\n     * @private\n     * @param {Object} cache The cache to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `0` if `value` is found, else `-1`.\n     */\n    function cacheIndexOf(cache, value) {\n      var data = cache.data,\n          result = (typeof value == 'string' || isObject(value)) ? data.set.has(value) : data.hash[value];\n\n      return result ? 0 : -1;\n    }\n\n    /**\n     * Adds `value` to the cache.\n     *\n     * @private\n     * @name push\n     * @memberOf SetCache\n     * @param {*} value The value to cache.\n     */\n    function cachePush(value) {\n      var data = this.data;\n      if (typeof value == 'string' || isObject(value)) {\n        data.set.add(value);\n      } else {\n        data.hash[value] = true;\n      }\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a new array joining `array` with `other`.\n     *\n     * @private\n     * @param {Array} array The array to join.\n     * @param {Array} other The other array to join.\n     * @returns {Array} Returns the new concatenated array.\n     */\n    function arrayConcat(array, other) {\n      var index = -1,\n          length = array.length,\n          othIndex = -1,\n          othLength = other.length,\n          result = Array(length + othLength);\n\n      while (++index < length) {\n        result[index] = array[index];\n      }\n      while (++othIndex < othLength) {\n        result[index++] = other[othIndex];\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayCopy(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEach` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEach(array, iteratee) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (iteratee(array[index], index, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEachRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEachRight(array, iteratee) {\n      var length = array.length;\n\n      while (length--) {\n        if (iteratee(array[length], length, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.every` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     */\n    function arrayEvery(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (!predicate(array[index], index, array)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `baseExtremum` for arrays which invokes `iteratee`\n     * with one argument: (value).\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function arrayExtremum(array, iteratee, comparator, exValue) {\n      var index = -1,\n          length = array.length,\n          computed = exValue,\n          result = computed;\n\n      while (++index < length) {\n        var value = array[index],\n            current = +iteratee(value);\n\n        if (comparator(current, computed)) {\n          computed = current;\n          result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.filter` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function arrayFilter(array, predicate) {\n      var index = -1,\n          length = array.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.map` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function arrayMap(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = iteratee(array[index], index, array);\n      }\n      return result;\n    }\n\n    /**\n     * Appends the elements of `values` to `array`.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to append.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayPush(array, values) {\n      var index = -1,\n          length = values.length,\n          offset = array.length;\n\n      while (++index < length) {\n        array[offset + index] = values[index];\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.reduce` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the first element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduce(array, iteratee, accumulator, initFromArray) {\n      var index = -1,\n          length = array.length;\n\n      if (initFromArray && length) {\n        accumulator = array[++index];\n      }\n      while (++index < length) {\n        accumulator = iteratee(accumulator, array[index], index, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.reduceRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the last element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduceRight(array, iteratee, accumulator, initFromArray) {\n      var length = array.length;\n      if (initFromArray && length) {\n        accumulator = array[--length];\n      }\n      while (length--) {\n        accumulator = iteratee(accumulator, array[length], length, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.some` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function arraySome(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (predicate(array[index], index, array)) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `_.sum` for arrays without support for callback\n     * shorthands and `this` binding..\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {number} Returns the sum.\n     */\n    function arraySum(array, iteratee) {\n      var length = array.length,\n          result = 0;\n\n      while (length--) {\n        result += +iteratee(array[length]) || 0;\n      }\n      return result;\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assign` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignDefaults(objectValue, sourceValue) {\n      return objectValue === undefined ? sourceValue : objectValue;\n    }\n\n    /**\n     * Used by `_.template` to customize its `_.assign` use.\n     *\n     * **Note:** This function is like `assignDefaults` except that it ignores\n     * inherited property values when checking if a property is `undefined`.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @param {string} key The key associated with the object and source values.\n     * @param {Object} object The destination object.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignOwnDefaults(objectValue, sourceValue, key, object) {\n      return (objectValue === undefined || !hasOwnProperty.call(object, key))\n        ? sourceValue\n        : objectValue;\n    }\n\n    /**\n     * A specialized version of `_.assign` for customizing assigned values without\n     * support for argument juggling, multiple sources, and `this` binding `customizer`\n     * functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     */\n    function assignWith(object, source, customizer) {\n      var index = -1,\n          props = keys(source),\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key],\n            result = customizer(value, source[key], key, object, source);\n\n        if ((result === result ? (result !== value) : (value === value)) ||\n            (value === undefined && !(key in object))) {\n          object[key] = result;\n        }\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for argument juggling,\n     * multiple sources, and `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return source == null\n        ? object\n        : baseCopy(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.at` without support for string collections\n     * and individual key arguments.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {number[]|string[]} props The property names or indexes of elements to pick.\n     * @returns {Array} Returns the new array of picked elements.\n     */\n    function baseAt(collection, props) {\n      var index = -1,\n          isNil = collection == null,\n          isArr = !isNil && isArrayLike(collection),\n          length = isArr ? collection.length : 0,\n          propsLength = props.length,\n          result = Array(propsLength);\n\n      while(++index < propsLength) {\n        var key = props[index];\n        if (isArr) {\n          result[index] = isIndex(key, length) ? collection[key] : undefined;\n        } else {\n          result[index] = isNil ? undefined : collection[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property names to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @returns {Object} Returns `object`.\n     */\n    function baseCopy(source, props, object) {\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n        object[key] = source[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.callback` which supports specifying the\n     * number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function baseCallback(func, thisArg, argCount) {\n      var type = typeof func;\n      if (type == 'function') {\n        return thisArg === undefined\n          ? func\n          : bindCallback(func, thisArg, argCount);\n      }\n      if (func == null) {\n        return identity;\n      }\n      if (type == 'object') {\n        return baseMatches(func);\n      }\n      return thisArg === undefined\n        ? property(func)\n        : baseMatchesProperty(func, thisArg);\n    }\n\n    /**\n     * The base implementation of `_.clone` without support for argument juggling\n     * and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The object `value` belongs to.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates clones with source counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n      var result;\n      if (customizer) {\n        result = object ? customizer(value, key, object) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return arrayCopy(value, result);\n        }\n      } else {\n        var tag = objToString.call(value),\n            isFunc = tag == funcTag;\n\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = initCloneObject(isFunc ? {} : value);\n          if (!isDeep) {\n            return baseAssign(result, value);\n          }\n        } else {\n          return cloneableTags[tag]\n            ? initCloneByTag(value, tag, isDeep)\n            : (object ? value : {});\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == value) {\n          return stackB[length];\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate it with its clone.\n      stackA.push(value);\n      stackB.push(result);\n\n      // Recursively populate clone (susceptible to call stack limits).\n      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n        result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} prototype The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(prototype) {\n        if (isObject(prototype)) {\n          object.prototype = prototype;\n          var result = new object;\n          object.prototype = undefined;\n        }\n        return result || {};\n      };\n    }());\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts an index\n     * of where to slice the arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Object} args The arguments provide to `func`.\n     * @returns {number} Returns the timer id.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of `_.difference` which accepts a single array\n     * of values to exclude.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values) {\n      var length = array ? array.length : 0,\n          result = [];\n\n      if (!length) {\n        return result;\n      }\n      var index = -1,\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          cache = (isCommon && values.length >= LARGE_ARRAY_SIZE) ? createCache(values) : null,\n          valuesLength = values.length;\n\n      if (cache) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n        values = cache;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index];\n\n        if (isCommon && value === value) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === value) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (indexOf(values, value, 0) < 0) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * Gets the extremum value of `collection` invoking `iteratee` for each value\n     * in `collection` to generate the criterion by which the value is ranked.\n     * The `iteratee` is invoked with three arguments: (value, index|key, collection).\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(collection, iteratee, comparator, exValue) {\n      var computed = exValue,\n          result = computed;\n\n      baseEach(collection, function(value, index, collection) {\n        var current = +iteratee(value, index, collection);\n        if (comparator(current, computed) || (current === exValue && current === result)) {\n          computed = current;\n          result = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : (end >>> 0);\n      start >>>= 0;\n\n      while (start < length) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\n     * without support for callback shorthands and `this` binding, which iterates\n     * over `collection` using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @param {boolean} [retKey] Specify returning the key of the found element\n     *  instead of the element itself.\n     * @returns {*} Returns the found element or its key, else `undefined`.\n     */\n    function baseFind(collection, predicate, eachFunc, retKey) {\n      var result;\n      eachFunc(collection, function(value, key, collection) {\n        if (predicate(value, key, collection)) {\n          result = retKey ? key : value;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with added support for restricting\n     * flattening and specifying the start index.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, isDeep, isStrict, result) {\n      result || (result = []);\n\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index];\n        if (isObjectLike(value) && isArrayLike(value) &&\n            (isStrict || isArray(value) || isArguments(value))) {\n          if (isDeep) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, isDeep, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForIn` and `baseForOwn` which iterates\n     * over `object` properties returned by `keysFunc` invoking `iteratee` for\n     * each property. Iteratee functions may exit iteration early by explicitly\n     * returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forIn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForIn(object, iteratee) {\n      return baseFor(object, iteratee, keysIn);\n    }\n\n    /**\n     * The base implementation of `_.forOwn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from those provided.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the new array of filtered property names.\n     */\n    function baseFunctions(object, props) {\n      var index = -1,\n          length = props.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var key = props[index];\n        if (isFunction(object[key])) {\n          result[++resIndex] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `get` without support for string paths\n     * and default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path of the property to get.\n     * @param {string} [pathKey] The key representation of path.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path, pathKey) {\n      if (object == null) {\n        return;\n      }\n      if (pathKey !== undefined && pathKey in toObject(object)) {\n        path = [pathKey];\n      }\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[path[index++]];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` without support for `this` binding\n     * `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n     * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = objToString.call(object);\n        if (objTag == argsTag) {\n          objTag = objectTag;\n        } else if (objTag != objectTag) {\n          objIsArr = isTypedArray(object);\n        }\n      }\n      if (!othIsArr) {\n        othTag = objToString.call(other);\n        if (othTag == argsTag) {\n          othTag = objectTag;\n        } else if (othTag != objectTag) {\n          othIsArr = isTypedArray(other);\n        }\n      }\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && !(objIsArr || objIsObj)) {\n        return equalByTag(object, other, objTag);\n      }\n      if (!isLoose) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      // For more information on detecting circular references see https://es5.github.io/#JO.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == object) {\n          return stackB[length] == other;\n        }\n      }\n      // Add `object` and `other` to the stack of traversed objects.\n      stackA.push(object);\n      stackB.push(other);\n\n      var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);\n\n      stackA.pop();\n      stackB.pop();\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} matchData The propery names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = toObject(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var result = customizer ? customizer(objValue, srcValue, key) : undefined;\n          if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, true) : result)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which does not clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        var key = matchData[0][0],\n            value = matchData[0][1];\n\n        return function(object) {\n          if (object == null) {\n            return false;\n          }\n          return object[key] === value && (value !== undefined || (key in toObject(object)));\n        };\n      }\n      return function(object) {\n        return baseIsMatch(object, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which does not clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to compare.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      var isArr = isArray(path),\n          isCommon = isKey(path) && isStrictComparable(srcValue),\n          pathKey = (path + '');\n\n      path = toPath(path);\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        var key = pathKey;\n        object = toObject(object);\n        if ((isArr || !isCommon) && !(key in object)) {\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          if (object == null) {\n            return false;\n          }\n          key = last(path);\n          object = toObject(object);\n        }\n        return object[key] === srcValue\n          ? (srcValue !== undefined || (key in object))\n          : baseIsEqual(srcValue, object[key], undefined, true);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for argument juggling,\n     * multiple sources, and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {Object} Returns `object`.\n     */\n    function baseMerge(object, source, customizer, stackA, stackB) {\n      if (!isObject(object)) {\n        return object;\n      }\n      var isSrcArr = isArrayLike(source) && (isArray(source) || isTypedArray(source)),\n          props = isSrcArr ? undefined : keys(source);\n\n      arrayEach(props || source, function(srcValue, key) {\n        if (props) {\n          key = srcValue;\n          srcValue = source[key];\n        }\n        if (isObjectLike(srcValue)) {\n          stackA || (stackA = []);\n          stackB || (stackB = []);\n          baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n        }\n        else {\n          var value = object[key],\n              result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n              isCommon = result === undefined;\n\n          if (isCommon) {\n            result = srcValue;\n          }\n          if ((result !== undefined || (isSrcArr && !(key in object))) &&\n              (isCommon || (result === result ? (result !== value) : (value === value)))) {\n            object[key] = result;\n          }\n        }\n      });\n      return object;\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {\n      var length = stackA.length,\n          srcValue = source[key];\n\n      while (length--) {\n        if (stackA[length] == srcValue) {\n          object[key] = stackB[length];\n          return;\n        }\n      }\n      var value = object[key],\n          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n          isCommon = result === undefined;\n\n      if (isCommon) {\n        result = srcValue;\n        if (isArrayLike(srcValue) && (isArray(srcValue) || isTypedArray(srcValue))) {\n          result = isArray(value)\n            ? value\n            : (isArrayLike(value) ? arrayCopy(value) : []);\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          result = isArguments(value)\n            ? toPlainObject(value)\n            : (isPlainObject(value) ? value : {});\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate\n      // it with its merged value.\n      stackA.push(srcValue);\n      stackB.push(result);\n\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);\n      } else if (result === result ? (result !== value) : (value === value)) {\n        object[key] = result;\n      }\n    }\n\n    /**\n     * The base implementation of `_.property` without support for deep paths.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function baseProperty(key) {\n      return function(object) {\n        return object == null ? undefined : object[key];\n      };\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function basePropertyDeep(path) {\n      var pathKey = (path + '');\n      path = toPath(path);\n      return function(object) {\n        return baseGet(object, path, pathKey);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * index arguments and capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0;\n      while (length--) {\n        var index = indexes[length];\n        if (index != previous && isIndex(index)) {\n          var previous = index;\n          splice.call(array, index, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for argument juggling\n     * and returning floating-point numbers.\n     *\n     * @private\n     * @param {number} min The minimum possible value.\n     * @param {number} max The maximum possible value.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(min, max) {\n      return min + nativeFloor(nativeRandom() * (max - min + 1));\n    }\n\n    /**\n     * The base implementation of `_.reduce` and `_.reduceRight` without support\n     * for callback shorthands and `this` binding, which iterates over `collection`\n     * using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} accumulator The initial value.\n     * @param {boolean} initFromCollection Specify using the first or last element\n     *  of `collection` as the initial value.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @returns {*} Returns the accumulated value.\n     */\n    function baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {\n      eachFunc(collection, function(value, index, collection) {\n        accumulator = initFromCollection\n          ? (initFromCollection = false, value)\n          : iteratee(accumulator, value, index, collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop detection.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortBy` which uses `comparer` to define\n     * the sort order of `array` and replaces criteria objects with their\n     * corresponding values.\n     *\n     * @private\n     * @param {Array} array The array to sort.\n     * @param {Function} comparer The function to define sort order.\n     * @returns {Array} Returns `array`.\n     */\n    function baseSortBy(array, comparer) {\n      var length = array.length;\n\n      array.sort(comparer);\n      while (length--) {\n        array[length] = array[length].value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.sortByOrder` without param guards.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseSortByOrder(collection, iteratees, orders) {\n      var callback = getCallback(),\n          index = -1;\n\n      iteratees = arrayMap(iteratees, function(iteratee) { return callback(iteratee); });\n\n      var result = baseMap(collection, function(value) {\n        var criteria = arrayMap(iteratees, function(iteratee) { return iteratee(value); });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.sum` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {number} Returns the sum.\n     */\n    function baseSum(collection, iteratee) {\n      var result = 0;\n      baseEach(collection, function(value, index, collection) {\n        result += +iteratee(value, index, collection) || 0;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.uniq` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The function invoked per iteration.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     */\n    function baseUniq(array, iteratee) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = array.length,\n          isCommon = indexOf == baseIndexOf,\n          isLarge = isCommon && length >= LARGE_ARRAY_SIZE,\n          seen = isLarge ? createCache() : null,\n          result = [];\n\n      if (seen) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n      } else {\n        isLarge = false;\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value, index, array) : value;\n\n        if (isCommon && value === value) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (indexOf(seen, computed, 0) < 0) {\n          if (iteratee || isLarge) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.values` and `_.valuesIn` which creates an\n     * array of `object` property values corresponding to the property names\n     * of `props`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} props The property names to get values for.\n     * @returns {Object} Returns the array of property values.\n     */\n    function baseValues(object, props) {\n      var index = -1,\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = object[props[index]];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.dropRightWhile`, `_.dropWhile`, `_.takeRightWhile`,\n     * and `_.takeWhile` without support for callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to peform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      var index = -1,\n          length = actions.length;\n\n      while (++index < length) {\n        var action = actions[index];\n        result = action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }\n      return result;\n    }\n\n    /**\n     * Performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndex(array, value, retHighest) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if ((retHighest ? (computed <= value) : (computed < value)) && computed !== null) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return binaryIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * This function is like `binaryIndex` except that it invokes `iteratee` for\n     * `value` and each element of `array` to compute their sort ranking. The\n     * iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array ? array.length : 0,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsUndef = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            isDef = computed !== undefined,\n            isReflexive = computed === computed;\n\n        if (valIsNaN) {\n          var setLow = isReflexive || retHighest;\n        } else if (valIsNull) {\n          setLow = isReflexive && isDef && (retHighest || computed != null);\n        } else if (valIsUndef) {\n          setLow = isReflexive && (retHighest || isDef);\n        } else if (computed == null) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * A specialized version of `baseCallback` which only supports `this` binding\n     * and specifying the number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function bindCallback(func, thisArg, argCount) {\n      if (typeof func != 'function') {\n        return identity;\n      }\n      if (thisArg === undefined) {\n        return func;\n      }\n      switch (argCount) {\n        case 1: return function(value) {\n          return func.call(thisArg, value);\n        };\n        case 3: return function(value, index, collection) {\n          return func.call(thisArg, value, index, collection);\n        };\n        case 4: return function(accumulator, value, index, collection) {\n          return func.call(thisArg, accumulator, value, index, collection);\n        };\n        case 5: return function(value, other, key, object, source) {\n          return func.call(thisArg, value, other, key, object, source);\n        };\n      }\n      return function() {\n        return func.apply(thisArg, arguments);\n      };\n    }\n\n    /**\n     * Creates a clone of the given array buffer.\n     *\n     * @private\n     * @param {ArrayBuffer} buffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function bufferClone(buffer) {\n      var result = new ArrayBuffer(buffer.byteLength),\n          view = new Uint8Array(result);\n\n      view.set(new Uint8Array(buffer));\n      return result;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders) {\n      var holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          leftIndex = -1,\n          leftLength = partials.length,\n          result = Array(leftLength + argsLength);\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        result[holders[argsIndex]] = args[argsIndex];\n      }\n      while (argsLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders) {\n      var holdersIndex = -1,\n          holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          rightIndex = -1,\n          rightLength = partials.length,\n          result = Array(argsLength + rightLength);\n\n      while (++argsIndex < argsLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        result[offset + holders[holdersIndex]] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * Creates a `_.countBy`, `_.groupBy`, `_.indexBy`, or `_.partition` function.\n     *\n     * @private\n     * @param {Function} setter The function to set keys and values of the accumulator object.\n     * @param {Function} [initializer] The function to initialize the accumulator object.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee, thisArg) {\n        var result = initializer ? initializer() : {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        if (isArray(collection)) {\n          var index = -1,\n              length = collection.length;\n\n          while (++index < length) {\n            var value = collection[index];\n            setter(result, value, iteratee(value, index, collection), collection);\n          }\n        } else {\n          baseEach(collection, function(value, key, collection) {\n            setter(result, value, iteratee(value, key, collection), collection);\n          });\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a `_.assign`, `_.defaults`, or `_.merge` function.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return restParam(function(object, sources) {\n        var index = -1,\n            length = object == null ? 0 : sources.length,\n            customizer = length > 2 ? sources[length - 2] : undefined,\n            guard = length > 2 ? sources[2] : undefined,\n            thisArg = length > 1 ? sources[length - 1] : undefined;\n\n        if (typeof customizer == 'function') {\n          customizer = bindCallback(customizer, thisArg, 5);\n          length -= 2;\n        } else {\n          customizer = typeof thisArg == 'function' ? thisArg : undefined;\n          length -= (customizer ? 1 : 0);\n        }\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        var length = collection ? getLength(collection) : 0;\n        if (!isLength(length)) {\n          return eachFunc(collection, iteratee);\n        }\n        var index = fromRight ? length : -1,\n            iterable = toObject(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var iterable = toObject(object),\n            props = keysFunc(object),\n            length = props.length,\n            index = fromRight ? length : -1;\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var key = props[index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createBindWrapper(func, thisArg) {\n      var Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(thisArg, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `Set` cache object to optimize linear searches of large arrays.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.\n     */\n    function createCache(values) {\n      return (nativeCreate && Set) ? new SetCache(values) : null;\n    }\n\n    /**\n     * Creates a function that produces compound words out of the words in a\n     * given string.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        var index = -1,\n            array = words(deburr(string)),\n            length = array.length,\n            result = '';\n\n        while (++index < length) {\n          result = callback(result, array[index], index);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtorWrapper(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors.\n        // See http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a `_.curry` or `_.curryRight` function.\n     *\n     * @private\n     * @param {boolean} flag The curry bit flag.\n     * @returns {Function} Returns the new curry function.\n     */\n    function createCurry(flag) {\n      function curryFunc(func, arity, guard) {\n        if (guard && isIterateeCall(func, arity, guard)) {\n          arity = undefined;\n        }\n        var result = createWrapper(func, flag, undefined, undefined, undefined, undefined, undefined, arity);\n        result.placeholder = curryFunc.placeholder;\n        return result;\n      }\n      return curryFunc;\n    }\n\n    /**\n     * Creates a `_.defaults` or `_.defaultsDeep` function.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Function} Returns the new defaults function.\n     */\n    function createDefaults(assigner, customizer) {\n      return restParam(function(args) {\n        var object = args[0];\n        if (object == null) {\n          return object;\n        }\n        args.push(customizer);\n        return assigner.apply(undefined, args);\n      });\n    }\n\n    /**\n     * Creates a `_.max` or `_.min` function.\n     *\n     * @private\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {Function} Returns the new extremum function.\n     */\n    function createExtremum(comparator, exValue) {\n      return function(collection, iteratee, thisArg) {\n        if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n          iteratee = undefined;\n        }\n        iteratee = getCallback(iteratee, thisArg, 3);\n        if (iteratee.length == 1) {\n          collection = isArray(collection) ? collection : toIterable(collection);\n          var result = arrayExtremum(collection, iteratee, comparator, exValue);\n          if (!(collection.length && result === exValue)) {\n            return result;\n          }\n        }\n        return baseExtremum(collection, iteratee, comparator, exValue);\n      };\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(eachFunc, fromRight) {\n      return function(collection, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        if (isArray(collection)) {\n          var index = baseFindIndex(collection, predicate, fromRight);\n          return index > -1 ? collection[index] : undefined;\n        }\n        return baseFind(collection, predicate, eachFunc);\n      };\n    }\n\n    /**\n     * Creates a `_.findIndex` or `_.findLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindIndex(fromRight) {\n      return function(array, predicate, thisArg) {\n        if (!(array && array.length)) {\n          return -1;\n        }\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFindIndex(array, predicate, fromRight);\n      };\n    }\n\n    /**\n     * Creates a `_.findKey` or `_.findLastKey` function.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindKey(objectFunc) {\n      return function(object, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFind(object, predicate, objectFunc, true);\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return function() {\n        var wrapper,\n            length = arguments.length,\n            index = fromRight ? length : -1,\n            leftIndex = 0,\n            funcs = Array(length);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var func = funcs[leftIndex++] = arguments[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (!wrapper && LodashWrapper.prototype.thru && getFuncName(func) == 'wrapper') {\n            wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? -1 : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) && data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) && !data[4].length && data[9] == 1) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      };\n    }\n\n    /**\n     * Creates a function for `_.forEach` or `_.forEachRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForEach(arrayFunc, eachFunc) {\n      return function(collection, iteratee, thisArg) {\n        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n          ? arrayFunc(collection, iteratee)\n          : eachFunc(collection, bindCallback(iteratee, thisArg, 3));\n      };\n    }\n\n    /**\n     * Creates a function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForIn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee, keysIn);\n      };\n    }\n\n    /**\n     * Creates a function for `_.forOwn` or `_.forOwnRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForOwn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee);\n      };\n    }\n\n    /**\n     * Creates a function for `_.mapKeys` or `_.mapValues`.\n     *\n     * @private\n     * @param {boolean} [isMapKeys] Specify mapping keys instead of values.\n     * @returns {Function} Returns the new map function.\n     */\n    function createObjectMapper(isMapKeys) {\n      return function(object, iteratee, thisArg) {\n        var result = {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        baseForOwn(object, function(value, key, object) {\n          var mapped = iteratee(value, key, object);\n          key = isMapKeys ? mapped : key;\n          value = isMapKeys ? value : mapped;\n          result[key] = value;\n        });\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function for `_.padLeft` or `_.padRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify padding from the right.\n     * @returns {Function} Returns the new pad function.\n     */\n    function createPadDir(fromRight) {\n      return function(string, length, chars) {\n        string = baseToString(string);\n        return (fromRight ? string : '') + createPadding(string, length, chars) + (fromRight ? '' : string);\n      };\n    }\n\n    /**\n     * Creates a `_.partial` or `_.partialRight` function.\n     *\n     * @private\n     * @param {boolean} flag The partial bit flag.\n     * @returns {Function} Returns the new partial function.\n     */\n    function createPartial(flag) {\n      var partialFunc = restParam(function(func, partials) {\n        var holders = replaceHolders(partials, partialFunc.placeholder);\n        return createWrapper(func, flag, undefined, partials, holders);\n      });\n      return partialFunc;\n    }\n\n    /**\n     * Creates a function for `_.reduce` or `_.reduceRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createReduce(arrayFunc, eachFunc) {\n      return function(collection, iteratee, accumulator, thisArg) {\n        var initFromArray = arguments.length < 3;\n        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n          ? arrayFunc(collection, iteratee, accumulator, initFromArray)\n          : baseReduce(collection, getCallback(iteratee, thisArg, 4), accumulator, initFromArray, eachFunc);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with optional `this`\n     * binding of, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & ARY_FLAG,\n          isBind = bitmask & BIND_FLAG,\n          isBindKey = bitmask & BIND_KEY_FLAG,\n          isCurry = bitmask & CURRY_FLAG,\n          isCurryBound = bitmask & CURRY_BOUND_FLAG,\n          isCurryRight = bitmask & CURRY_RIGHT_FLAG,\n          Ctor = isBindKey ? undefined : createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it to other functions.\n        var length = arguments.length,\n            index = length,\n            args = Array(length);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight);\n        }\n        if (isCurry || isCurryRight) {\n          var placeholder = wrapper.placeholder,\n              argsHolders = replaceHolders(args, placeholder);\n\n          length -= argsHolders.length;\n          if (length < arity) {\n            var newArgPos = argPos ? arrayCopy(argPos) : undefined,\n                newArity = nativeMax(arity - length, 0),\n                newsHolders = isCurry ? argsHolders : undefined,\n                newHoldersRight = isCurry ? undefined : argsHolders,\n                newPartials = isCurry ? args : undefined,\n                newPartialsRight = isCurry ? undefined : args;\n\n            bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n            bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n            if (!isCurryBound) {\n              bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n            }\n            var newData = [func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity],\n                result = createHybridWrapper.apply(undefined, newData);\n\n            if (isLaziable(func)) {\n              setData(result, newData);\n            }\n            result.placeholder = placeholder;\n            return result;\n          }\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        if (argPos) {\n          args = reorder(args, argPos);\n        }\n        if (isAry && ary < args.length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtorWrapper(func);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates the padding required for `string` based on the given `length`.\n     * The `chars` string is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {string} string The string to create padding for.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the pad for `string`.\n     */\n    function createPadding(string, length, chars) {\n      var strLength = string.length;\n      length = +length;\n\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return '';\n      }\n      var padLength = length - strLength;\n      chars = chars == null ? ' ' : (chars + '');\n      return repeat(chars, nativeCeil(padLength / chars.length)).slice(0, padLength);\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the optional `this`\n     * binding of `thisArg` and the `partials` prepended to those provided to\n     * the wrapper.\n     *\n     * @private\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to the new function.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createPartialWrapper(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it `func`.\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength);\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.ceil`, `_.floor`, or `_.round` function.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        precision = precision === undefined ? 0 : (+precision || 0);\n        if (precision) {\n          precision = pow(10, precision);\n          return func(number * precision) / precision;\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a `_.sortedIndex` or `_.sortedLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {Function} Returns the new index function.\n     */\n    function createSortedIndex(retHighest) {\n      return function(array, value, iteratee, thisArg) {\n        var callback = getCallback(iteratee);\n        return (iteratee == null && callback === baseCallback)\n          ? binaryIndex(array, value, retHighest)\n          : binaryIndexBy(array, value, callback(iteratee, thisArg, 1), retHighest);\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - `_.bind`\n     *     2 - `_.bindKey`\n     *     4 - `_.curry` or `_.curryRight` of a bound function\n     *     8 - `_.curry`\n     *    16 - `_.curryRight`\n     *    32 - `_.partial`\n     *    64 - `_.partialRight`\n     *   128 - `_.rearg`\n     *   256 - `_.ary`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      length -= (holders ? holders.length : 0);\n      if (bitmask & PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func),\n          newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];\n\n      if (data) {\n        mergeData(newData, data);\n        bitmask = newData[1];\n        arity = newData[9];\n      }\n      newData[9] = arity == null\n        ? (isBindKey ? 0 : func.length)\n        : (nativeMax(arity - length, 0) || 0);\n\n      if (bitmask == BIND_FLAG) {\n        var result = createBindWrapper(newData[0], newData[2]);\n      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length) {\n        result = createPartialWrapper.apply(undefined, newData);\n      } else {\n        result = createHybridWrapper.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setter(result, newData);\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing arrays.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var index = -1,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isLoose && othLength > arrLength)) {\n        return false;\n      }\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index],\n            result = customizer ? customizer(isLoose ? othValue : arrValue, isLoose ? arrValue : othValue, index) : undefined;\n\n        if (result !== undefined) {\n          if (result) {\n            continue;\n          }\n          return false;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (isLoose) {\n          if (!arraySome(other, function(othValue) {\n                return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);\n              })) {\n            return false;\n          }\n        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB))) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag) {\n      switch (tag) {\n        case boolTag:\n        case dateTag:\n          // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n          return +object == +other;\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case numberTag:\n          // Treat `NaN` vs. `NaN` as equal.\n          return (object != +object)\n            ? other != +other\n            : object == +other;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings primitives and string\n          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n          return object == (other + '');\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isLoose) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      var skipCtor = isLoose;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key],\n            result = customizer ? customizer(isLoose ? othValue : objValue, isLoose? objValue : othValue, key) : undefined;\n\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) {\n          return false;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (!skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Gets the appropriate \"callback\" function. If the `_.callback` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseCallback` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getCallback(func, thisArg, argCount) {\n      var result = lodash.callback || callback;\n      result = result === callback ? baseCallback : result;\n      return argCount ? result(func, thisArg, argCount) : result;\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = func.name,\n          array = realNames[result],\n          length = array ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseIndexOf` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function|number} Returns the chosen function or its result.\n     */\n    function getIndexOf(collection, target, fromIndex) {\n      var result = lodash.indexOf || indexOf;\n      result = result === indexOf ? baseIndexOf : result;\n      return collection ? result(collection, target, fromIndex) : result;\n    }\n\n    /**\n     * Gets the \"length\" property value of `object`.\n     *\n     * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n     * that affects Safari on at least iOS 8.1-8.3 ARM64.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {*} Returns the \"length\" value.\n     */\n    var getLength = baseProperty('length');\n\n    /**\n     * Gets the propery names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = pairs(object),\n          length = result.length;\n\n      while (length--) {\n        result[length][2] = isStrictComparable(result[length][1]);\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = object == null ? undefined : object[key];\n      return isNative(value) ? value : undefined;\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add array properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      var Ctor = object.constructor;\n      if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n        Ctor = Object;\n      }\n      return new Ctor;\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return bufferClone(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          var buffer = object.buffer;\n          return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          var result = new Ctor(object.source, reFlags.exec(object));\n          result.lastIndex = object.lastIndex;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the method at `path` on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function invokePath(object, path, args) {\n      if (object != null && !isKey(path, object)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        path = last(path);\n      }\n      var func = object == null ? object : object[path];\n      return func == null ? undefined : func.apply(object, args);\n    }\n\n    /**\n     * Checks if `value` is array-like.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(getLength(value));\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return value > -1 && value % 1 == 0 && value < length;\n    }\n\n    /**\n     * Checks if the provided arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n          ? (isArrayLike(object) && isIndex(index, object.length))\n          : (type == 'string' && index in object)) {\n        var other = object[index];\n        return value === value ? (value === other) : (other !== other);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      var type = typeof value;\n      if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {\n        return true;\n      }\n      if (isArray(value)) {\n        return false;\n      }\n      var result = !reIsDeepProp.test(value);\n      return result || (object != null && value in toObject(object));\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func);\n      if (!(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      var other = lodash[funcName];\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     */\n    function isLength(value) {\n      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers required to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n     * augment function arguments, making the order in which they are executed important,\n     * preventing the merging of metadata. However, we make an exception for a safe\n     * common case where curried functions have `_.ary` and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < ARY_FLAG;\n\n      var isCombo =\n        (srcBitmask == ARY_FLAG && bitmask == CURRY_FLAG) ||\n        (srcBitmask == ARY_FLAG && bitmask == REARG_FLAG && data[7].length <= source[8]) ||\n        (srcBitmask == (ARY_FLAG | REARG_FLAG) && bitmask == CURRY_FLAG);\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= (bitmask & BIND_FLAG) ? 0 : CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : arrayCopy(value);\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : arrayCopy(source[4]);\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : arrayCopy(value);\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : arrayCopy(source[6]);\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = arrayCopy(value);\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function mergeDefaults(objectValue, sourceValue) {\n      return objectValue === undefined ? sourceValue : merge(objectValue, sourceValue, mergeDefaults);\n    }\n\n    /**\n     * A specialized version of `_.pick` which picks `object` properties specified\n     * by `props`.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property names to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByArray(object, props) {\n      object = toObject(object);\n\n      var index = -1,\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index];\n        if (key in object) {\n          result[key] = object[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.pick` which picks `object` properties `predicate`\n     * returns truthy for.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByCallback(object, predicate) {\n      var result = {};\n      baseForIn(object, function(value, key, object) {\n        if (predicate(value, key, object)) {\n          result[key] = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = arrayCopy(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity function\n     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = (function() {\n      var count = 0,\n          lastCalled = 0;\n\n      return function(key, value) {\n        var stamp = now(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return key;\n          }\n        } else {\n          count = 0;\n        }\n        return baseSetData(key, value);\n      };\n    }());\n\n    /**\n     * A fallback implementation of `Object.keys` which creates an array of the\n     * own enumerable property names of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function shimKeys(object) {\n      var props = keysIn(object),\n          propsLength = props.length,\n          length = propsLength && object.length;\n\n      var allowIndexes = !!length && isLength(length) &&\n        (isArray(object) || isArguments(object));\n\n      var index = -1,\n          result = [];\n\n      while (++index < propsLength) {\n        var key = props[index];\n        if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to an array-like object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array|Object} Returns the array-like object.\n     */\n    function toIterable(value) {\n      if (value == null) {\n        return [];\n      }\n      if (!isArrayLike(value)) {\n        return values(value);\n      }\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to an object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Object} Returns the object.\n     */\n    function toObject(value) {\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to property path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array} Returns the property path array.\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return value;\n      }\n      var result = [];\n      baseToString(value).replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      return wrapper instanceof LazyWrapper\n        ? wrapper.clone()\n        : new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__, arrayCopy(wrapper.__actions__));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `collection` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new array containing chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if (guard ? isIterateeCall(array, size, guard) : size == null) {\n        size = 1;\n      } else {\n        size = nativeMax(nativeFloor(size) || 1, 1);\n      }\n      var index = 0,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[++resIndex] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of unique `array` values not included in the other\n     * provided arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The arrays of values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.difference([1, 2, 3], [4, 2]);\n     * // => [1, 3]\n     */\n    var difference = restParam(function(array, values) {\n      return (isObjectLike(array) && isArrayLike(array))\n        ? baseDifference(array, baseFlatten(values, false, true))\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that match the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [1]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active', false), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active', false), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8], '*', 1, 2);\n     * // => [4, '*', 8]\n     */\n    function fill(array, value, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(chr) {\n     *   return chr.user == 'barney';\n     * });\n     * // => 0\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findIndex(users, 'active', false);\n     * // => 0\n     *\n     * // using the `_.property` callback shorthand\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    var findIndex = createFindIndex();\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(chr) {\n     *   return chr.user == 'pebbles';\n     * });\n     * // => 2\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastIndex(users, 'active', false);\n     * // => 2\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    var findLastIndex = createFindIndex(true);\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias head\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.first([1, 2, 3]);\n     * // => 1\n     *\n     * _.first([]);\n     * // => undefined\n     */\n    function first(array) {\n      return array ? array[0] : undefined;\n    }\n\n    /**\n     * Flattens a nested array. If `isDeep` is `true` the array is recursively\n     * flattened, otherwise it is only flattened a single level.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, [4]]\n     *\n     * // using `isDeep`\n     * _.flatten([1, [2, 3, [4]]], true);\n     * // => [1, 2, 3, 4]\n     */\n    function flatten(array, isDeep, guard) {\n      var length = array ? array.length : 0;\n      if (guard && isIterateeCall(array, isDeep, guard)) {\n        isDeep = false;\n      }\n      return length ? baseFlatten(array, isDeep) : [];\n    }\n\n    /**\n     * Recursively flattens a nested array.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to recursively flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, 4]\n     */\n    function flattenDeep(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, true) : [];\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n     * from the end of `array`. If `array` is sorted providing `true` for `fromIndex`\n     * performs a faster binary search.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n     *  to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // using `fromIndex`\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     *\n     * // performing a binary search\n     * _.indexOf([1, 1, 2, 2], 2, true);\n     * // => 2\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      if (typeof fromIndex == 'number') {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\n      } else if (fromIndex) {\n        var index = binaryIndex(array, value);\n        if (index < length &&\n            (value === value ? (value === array[index]) : (array[index] !== array[index]))) {\n          return index;\n        }\n        return -1;\n      }\n      return baseIndexOf(array, value, fromIndex || 0);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      return dropRight(array, 1);\n    }\n\n    /**\n     * Creates an array of unique values that are included in all of the provided\n     * arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of shared values.\n     * @example\n     * _.intersection([1, 2], [4, 2], [2, 1]);\n     * // => [2]\n     */\n    var intersection = restParam(function(arrays) {\n      var othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(length),\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          result = [];\n\n      while (othIndex--) {\n        var value = arrays[othIndex] = isArrayLike(value = arrays[othIndex]) ? value : [];\n        caches[othIndex] = (isCommon && value.length >= 120) ? createCache(othIndex && value) : null;\n      }\n      var array = arrays[0],\n          index = -1,\n          length = array ? array.length : 0,\n          seen = caches[0];\n\n      outer:\n      while (++index < length) {\n        value = array[index];\n        if ((seen ? cacheIndexOf(seen, value) : indexOf(result, value, 0)) < 0) {\n          var othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if ((cache ? cacheIndexOf(cache, value) : indexOf(arrays[othIndex], value, 0)) < 0) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(value);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    });\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array ? array.length : 0;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=array.length-1] The index to search from\n     *  or `true` to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // using `fromIndex`\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     *\n     * // performing a binary search\n     * _.lastIndexOf([1, 1, 2, 2], 2, true);\n     * // => 3\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (typeof fromIndex == 'number') {\n        index = (fromIndex < 0 ? nativeMax(length + fromIndex, 0) : nativeMin(fromIndex || 0, length - 1)) + 1;\n      } else if (fromIndex) {\n        index = binaryIndex(array, value, true) - 1;\n        var other = array[index];\n        if (value === value ? (value === other) : (other !== other)) {\n          return index;\n        }\n        return -1;\n      }\n      if (value !== value) {\n        return indexOfNaN(array, index, true);\n      }\n      while (index--) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Removes all provided values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3, 1, 2, 3];\n     *\n     * _.pull(array, 2, 3);\n     * console.log(array);\n     * // => [1, 1]\n     */\n    function pull() {\n      var args = arguments,\n          array = args[0];\n\n      if (!(array && array.length)) {\n        return array;\n      }\n      var index = 0,\n          indexOf = getIndexOf(),\n          length = args.length;\n\n      while (++index < length) {\n        var fromIndex = 0,\n            value = args[index];\n\n        while ((fromIndex = indexOf(array, value, fromIndex)) > -1) {\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to the given indexes and returns\n     * an array of the removed elements. Indexes may be specified as an array of\n     * indexes or as individual arguments.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [5, 10, 15, 20];\n     * var evens = _.pullAt(array, 1, 3);\n     *\n     * console.log(array);\n     * // => [5, 15]\n     *\n     * console.log(evens);\n     * // => [10, 20]\n     */\n    var pullAt = restParam(function(array, indexes) {\n      indexes = baseFlatten(indexes);\n\n      var result = baseAt(array, indexes);\n      basePullAt(array, indexes.sort(baseCompareAscending));\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate, thisArg) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getCallback(predicate, thisArg, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias tail\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.rest([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function rest(array) {\n      return drop(array, 1);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of `Array#slice` to support node\n     * lists in IE < 9 and to ensure dense arrays are returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value` should\n     * be inserted into `array` in order to maintain its sort order. If an iteratee\n     * function is provided it is invoked for `value` and each element of `array`\n     * to compute their sort ranking. The iteratee is bound to `thisArg` and\n     * invoked with one argument; (value).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     *\n     * _.sortedIndex([4, 4, 5, 5], 5);\n     * // => 2\n     *\n     * var dict = { 'data': { 'thirty': 30, 'forty': 40, 'fifty': 50 } };\n     *\n     * // using an iteratee function\n     * _.sortedIndex(['thirty', 'fifty'], 'forty', function(word) {\n     *   return this.data[word];\n     * }, dict);\n     * // => 1\n     *\n     * // using the `_.property` callback shorthand\n     * _.sortedIndex([{ 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n     * // => 1\n     */\n    var sortedIndex = createSortedIndex();\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 4, 5, 5], 5);\n     * // => 4\n     */\n    var sortedLastIndex = createSortedIndex(true);\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is bound to `thisArg`\n     * and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [2, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active', false), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [1, 2]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false},\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active', false), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all of the provided arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([1, 2], [4, 2], [2, 1]);\n     * // => [1, 2, 4]\n     */\n    var union = restParam(function(arrays) {\n      return baseUniq(baseFlatten(arrays, false, true));\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurence of each element\n     * is kept. Providing `true` for `isSorted` performs a faster search algorithm\n     * for sorted arrays. If an iteratee function is provided it is invoked for\n     * each element in the array to generate the criterion by which uniqueness\n     * is computed. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, array).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias unique\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {boolean} [isSorted] Specify the array is sorted.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     *\n     * // using `isSorted`\n     * _.uniq([1, 1, 2], true);\n     * // => [1, 2]\n     *\n     * // using an iteratee function\n     * _.uniq([1, 2.5, 1.5, 2], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => [1, 2.5]\n     *\n     * // using the `_.property` callback shorthand\n     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniq(array, isSorted, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (isSorted != null && typeof isSorted != 'boolean') {\n        thisArg = iteratee;\n        iteratee = isIterateeCall(array, isSorted, thisArg) ? undefined : isSorted;\n        isSorted = false;\n      }\n      var callback = getCallback();\n      if (!(iteratee == null && callback === baseCallback)) {\n        iteratee = callback(iteratee, thisArg, 3);\n      }\n      return (isSorted && getIndexOf() == baseIndexOf)\n        ? sortedUniq(array, iteratee)\n        : baseUniq(array, iteratee);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['fred', 'barney'], [30, 40], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var index = -1,\n          length = 0;\n\n      array = arrayFilter(array, function(group) {\n        if (isArrayLike(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = arrayMap(array, baseProperty(index));\n      }\n      return result;\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts an iteratee to specify\n     * how regrouped values should be combined. The `iteratee` is bound to `thisArg`\n     * and invoked with four arguments: (accumulator, value, index, group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee] The function to combine regrouped values.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      iteratee = bindCallback(iteratee, thisArg, 4);\n      return arrayMap(result, function(group) {\n        return arrayReduce(group, iteratee, undefined, true);\n      });\n    }\n\n    /**\n     * Creates an array excluding all provided values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to filter.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.without([1, 2, 1, 3], 1, 2);\n     * // => [3]\n     */\n    var without = restParam(function(array, values) {\n      return isArrayLike(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the provided arrays.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of values.\n     * @example\n     *\n     * _.xor([1, 2], [4, 2]);\n     * // => [1, 4]\n     */\n    function xor() {\n      var index = -1,\n          length = arguments.length;\n\n      while (++index < length) {\n        var array = arguments[index];\n        if (isArrayLike(array)) {\n          var result = result\n            ? arrayPush(baseDifference(result, array), baseDifference(array, result))\n            : array;\n        }\n      }\n      return result ? baseUniq(result) : [];\n    }\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the first\n     * elements of the given arrays, the second of which contains the second elements\n     * of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     */\n    var zip = restParam(unzip);\n\n    /**\n     * The inverse of `_.pairs`; this method returns an object composed from arrays\n     * of property names and values. Provide either a single two dimensional array,\n     * e.g. `[[key1, value1], [key2, value2]]` or two arrays, one of property names\n     * and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @alias object\n     * @category Array\n     * @param {Array} props The property names.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject([['fred', 30], ['barney', 40]]);\n     * // => { 'fred': 30, 'barney': 40 }\n     *\n     * _.zipObject(['fred', 'barney'], [30, 40]);\n     * // => { 'fred': 30, 'barney': 40 }\n     */\n    function zipObject(props, values) {\n      var index = -1,\n          length = props ? props.length : 0,\n          result = {};\n\n      if (length && !values && !isArray(props[0])) {\n        values = [];\n      }\n      while (++index < length) {\n        var key = props[index];\n        if (values) {\n          result[key] = values[index];\n        } else if (key) {\n          result[key[0]] = key[1];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an iteratee to specify\n     * how grouped values should be combined. The `iteratee` is bound to `thisArg`\n     * and invoked with four arguments: (accumulator, value, index, group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee] The function to combine grouped values.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], _.add);\n     * // => [111, 222]\n     */\n    var zipWith = restParam(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 2 ? arrays[length - 2] : undefined,\n          thisArg = length > 1 ? arrays[length - 1] : undefined;\n\n      if (length > 2 && typeof iteratee == 'function') {\n        length -= 2;\n      } else {\n        iteratee = (length > 1 && typeof thisArg == 'function') ? (--length, thisArg) : undefined;\n        thisArg = undefined;\n      }\n      arrays.length = length;\n      return unzipWith(arrays, iteratee, thisArg);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object that wraps `value` with explicit method\n     * chaining enabled.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _.chain(users)\n     *   .sortBy('age')\n     *   .map(function(chr) {\n     *     return chr.user + ' is ' + chr.age;\n     *   })\n     *   .first()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor is\n     * bound to `thisArg` and invoked with one argument; (value). The purpose of\n     * this method is to \"tap into\" a method chain in order to perform operations\n     * on intermediate results within the chain.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor, thisArg) {\n      interceptor.call(thisArg, value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor, thisArg) {\n      return interceptor.call(thisArg, value);\n    }\n\n    /**\n     * Enables explicit method chaining on the wrapper object.\n     *\n     * @name chain\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // without explicit chaining\n     * _(users).first();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // with explicit chaining\n     * _(users).chain()\n     *   .first()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chained sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Creates a new array joining a wrapped array with any additional arrays\n     * and/or values.\n     *\n     * @name concat\n     * @memberOf _\n     * @category Chain\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var wrapped = _(array).concat(2, [3], [[4]]);\n     *\n     * console.log(wrapped.value());\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    var wrapperConcat = restParam(function(values) {\n      values = baseFlatten(values);\n      return this.thru(function(array) {\n        return arrayConcat(isArray(array) ? array : [toObject(array)], values);\n      });\n    });\n\n    /**\n     * Creates a clone of the chained sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).map(function(value) {\n     *   return Math.pow(value, 2);\n     * });\n     *\n     * var other = [3, 4];\n     * var otherWrapped = wrapped.plant(other);\n     *\n     * otherWrapped.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * Reverses the wrapped array so the first element becomes the last, the\n     * second element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new reversed `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n\n      var interceptor = function(value) {\n        return (wrapped && wrapped.__dir__ < 0) ? value : value.reverse();\n      };\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(interceptor);\n    }\n\n    /**\n     * Produces the result of coercing the unwrapped value to a string.\n     *\n     * @name toString\n     * @memberOf _\n     * @category Chain\n     * @returns {string} Returns the coerced string value.\n     * @example\n     *\n     * _([1, 2, 3]).toString();\n     * // => '1,2,3'\n     */\n    function wrapperToString() {\n      return (this.value() + '');\n    }\n\n    /**\n     * Executes the chained sequence to extract the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @alias run, toJSON, valueOf\n     * @category Chain\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements corresponding to the given keys, or indexes,\n     * of `collection`. Keys may be specified as individual arguments or as arrays\n     * of keys.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(number|number[]|string|string[])} [props] The property names\n     *  or indexes of elements to pick, specified individually or in arrays.\n     * @returns {Array} Returns the new array of picked elements.\n     * @example\n     *\n     * _.at(['a', 'b', 'c'], [0, 2]);\n     * // => ['a', 'c']\n     *\n     * _.at(['barney', 'fred', 'pebbles'], 0, 2);\n     * // => ['barney', 'pebbles']\n     */\n    var at = restParam(function(collection, props) {\n      return baseAt(collection, baseFlatten(props));\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the number of times the key was returned by `iteratee`.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * The predicate is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias all\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': false },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.every(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = undefined;\n      }\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias select\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.filter([4, 5, 6], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 6]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.filter(users, { 'age': 36, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.filter(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.filter(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function filter(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias detect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.result(_.find(users, function(chr) {\n     *   return chr.age < 40;\n     * }), 'user');\n     * // => 'barney'\n     *\n     * // using the `_.matches` callback shorthand\n     * _.result(_.find(users, { 'age': 1, 'active': true }), 'user');\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.result(_.find(users, 'active', false), 'user');\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.result(_.find(users, 'active'), 'user');\n     * // => 'barney'\n     */\n    var find = createFind(baseEach);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(baseEachRight, true);\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning the first element that has equivalent property\n     * values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.result(_.findWhere(users, { 'age': 36, 'active': true }), 'user');\n     * // => 'barney'\n     *\n     * _.result(_.findWhere(users, { 'age': 40, 'active': false }), 'user');\n     * // => 'fred'\n     */\n    function findWhere(collection, source) {\n      return find(collection, baseMatches(source));\n    }\n\n    /**\n     * Iterates over elements of `collection` invoking `iteratee` for each element.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection). Iteratee functions may exit iteration early\n     * by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\" property\n     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n     * may be used for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @alias each\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEach(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from left to right and returns the array\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(n, key) {\n     *   console.log(n, key);\n     * });\n     * // => logs each value-key pair and returns the object (iteration order is not guaranteed)\n     */\n    var forEach = createForEach(arrayEach, baseEach);\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEachRight(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from right to left and returns the array\n     */\n    var forEachRight = createForEach(arrayEachRight, baseEachRight);\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is an array of the elements responsible for generating the key.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * // using the `_.property` callback shorthand\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        result[key] = [value];\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n     * from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @alias contains, include\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {*} target The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {boolean} Returns `true` if a matching element is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n     * // => true\n     *\n     * _.includes('pebbles', 'eb');\n     * // => true\n     */\n    function includes(collection, target, fromIndex, guard) {\n      var length = collection ? getLength(collection) : 0;\n      if (!isLength(length)) {\n        collection = values(collection);\n        length = collection.length;\n      }\n      if (typeof fromIndex != 'number' || (guard && isIterateeCall(target, fromIndex, guard))) {\n        fromIndex = 0;\n      } else {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : (fromIndex || 0);\n      }\n      return (typeof collection == 'string' || !isArray(collection) && isString(collection))\n        ? (fromIndex <= length && collection.indexOf(target, fromIndex) > -1)\n        : (!!length && getIndexOf(collection, target, fromIndex) > -1);\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the last element responsible for generating the key. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var keyData = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.indexBy(keyData, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return String.fromCharCode(object.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return this.fromCharCode(object.code);\n     * }, String);\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     */\n    var indexBy = createAggregator(function(result, value, key) {\n      result[key] = value;\n    });\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `methodName` is a function it is\n     * invoked for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invoke([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invoke = restParam(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          isProp = isKey(path),\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n        result[++index] = func ? func.apply(value, args) : invokePath(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` through\n     * `iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `callback`, `chunk`, `clone`, `create`, `curry`, `curryRight`,\n     * `drop`, `dropRight`, `every`, `fill`, `flatten`, `invert`, `max`, `min`,\n     * `parseInt`, `slice`, `sortBy`, `take`, `takeRight`, `template`, `trim`,\n     * `trimLeft`, `trimRight`, `trunc`, `random`, `range`, `sample`, `some`,\n     * `sum`, `uniq`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @alias collect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function timesThree(n) {\n     *   return n * 3;\n     * }\n     *\n     * _.map([1, 2], timesThree);\n     * // => [3, 6]\n     *\n     * _.map({ 'a': 1, 'b': 2 }, timesThree);\n     * // => [3, 6] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee, thisArg) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return func(collection, iteratee);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, while the second of which\n     * contains elements `predicate` returns falsey for. The predicate is bound\n     * to `thisArg` and invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * _.partition([1, 2, 3], function(n) {\n     *   return n % 2;\n     * });\n     * // => [[1, 3], [2]]\n     *\n     * _.partition([1.2, 2.3, 3.4], function(n) {\n     *   return this.floor(n) % 2;\n     * }, Math);\n     * // => [[1.2, 3.4], [2.3]]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * var mapper = function(array) {\n     *   return _.pluck(array, 'user');\n     * };\n     *\n     * // using the `_.matches` callback shorthand\n     * _.map(_.partition(users, { 'age': 1, 'active': false }), mapper);\n     * // => [['pebbles'], ['barney', 'fred']]\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.map(_.partition(users, 'active', false), mapper);\n     * // => [['barney', 'pebbles'], ['fred']]\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(_.partition(users, 'active'), mapper);\n     * // => [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Gets the property value of `path` from all elements in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|string} path The path of the property to pluck.\n     * @returns {Array} Returns the property values.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.pluck(users, 'user');\n     * // => ['barney', 'fred']\n     *\n     * var userIndex = _.indexBy(users, 'user');\n     * _.pluck(userIndex, 'age');\n     * // => [36, 40] (iteration order is not guaranteed)\n     */\n    function pluck(collection, path) {\n      return map(collection, property(path));\n    }\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` through `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not provided the first element of `collection` is used as the initial\n     * value. The `iteratee` is bound to `thisArg` and invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `sortByAll`,\n     * and `sortByOrder`\n     *\n     * @static\n     * @memberOf _\n     * @alias foldl, inject\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.reduce([1, 2], function(total, n) {\n     *   return total + n;\n     * });\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     *   return result;\n     * }, {});\n     * // => { 'a': 3, 'b': 6 } (iteration order is not guaranteed)\n     */\n    var reduce = createReduce(arrayReduce, baseEach);\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias foldr\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    var reduceRight = createReduce(arrayReduceRight, baseEachRight);\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.reject([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [1, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.reject(users, { 'age': 40, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.reject(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.reject(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function reject(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, function(value, index, collection) {\n        return !predicate(value, index, collection);\n      });\n    }\n\n    /**\n     * Gets a random element or `n` random elements from a collection.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to sample.\n     * @param {number} [n] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {*} Returns the random sample(s).\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     *\n     * _.sample([1, 2, 3, 4], 2);\n     * // => [3, 1]\n     */\n    function sample(collection, n, guard) {\n      if (guard ? isIterateeCall(collection, n, guard) : n == null) {\n        collection = toIterable(collection);\n        var length = collection.length;\n        return length > 0 ? collection[baseRandom(0, length - 1)] : undefined;\n      }\n      var index = -1,\n          result = toArray(collection),\n          length = result.length,\n          lastIndex = length - 1;\n\n      n = nativeMin(n < 0 ? 0 : (+n || 0), length);\n      while (++index < n) {\n        var rand = baseRandom(index, lastIndex),\n            value = result[rand];\n\n        result[rand] = result[index];\n        result[index] = value;\n      }\n      result.length = n;\n      return result;\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      return sample(collection, POSITIVE_INFINITY);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the size of `collection`.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      var length = collection ? getLength(collection) : 0;\n      return isLength(length) ? length : keys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * The function returns as soon as it finds a passing value and does not iterate\n     * over the entire collection. The predicate is bound to `thisArg` and invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias any\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.some(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = undefined;\n      }\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection through `iteratee`. This method performs\n     * a stable sort, that is, it preserves the original sort order of equal elements.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return Math.sin(n);\n     * });\n     * // => [3, 1, 2]\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return this.sin(n);\n     * }, Math);\n     * // => [3, 1, 2]\n     *\n     * var users = [\n     *   { 'user': 'fred' },\n     *   { 'user': 'pebbles' },\n     *   { 'user': 'barney' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.sortBy(users, 'user'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function sortBy(collection, iteratee, thisArg) {\n      if (collection == null) {\n        return [];\n      }\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = undefined;\n      }\n      var index = -1;\n      iteratee = getCallback(iteratee, thisArg, 3);\n\n      var result = baseMap(collection, function(value, key, collection) {\n        return { 'criteria': iteratee(value, key, collection), 'index': ++index, 'value': value };\n      });\n      return baseSortBy(result, compareAscending);\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it can sort by multiple iteratees\n     * or property names.\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(Function|Function[]|Object|Object[]|string|string[])} iteratees\n     *  The iteratees to sort by, specified as individual values or arrays of values.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.map(_.sortByAll(users, ['user', 'age']), _.values);\n     * // => [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]\n     *\n     * _.map(_.sortByAll(users, 'user', function(chr) {\n     *   return Math.floor(chr.age / 10);\n     * }), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    var sortByAll = restParam(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var guard = iteratees[2];\n      if (guard && isIterateeCall(iteratees[0], iteratees[1], guard)) {\n        iteratees.length = 1;\n      }\n      return baseSortByOrder(collection, baseFlatten(iteratees), []);\n    });\n\n    /**\n     * This method is like `_.sortByAll` except that it allows specifying the\n     * sort orders of the iteratees to sort by. If `orders` is unspecified, all\n     * values are sorted in ascending order. Otherwise, a value is sorted in\n     * ascending order if its corresponding order is \"asc\", and descending if \"desc\".\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // sort by `user` in ascending order and by `age` in descending order\n     * _.map(_.sortByOrder(users, ['user', 'age'], ['asc', 'desc']), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    function sortByOrder(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (guard && isIterateeCall(iteratees, orders, guard)) {\n        orders = undefined;\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseSortByOrder(collection, iteratees, orders);\n    }\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning an array of all elements that have equivalent\n     * property values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false, 'pets': ['hoppy'] },\n     *   { 'user': 'fred',   'age': 40, 'active': true, 'pets': ['baby puss', 'dino'] }\n     * ];\n     *\n     * _.pluck(_.where(users, { 'age': 36, 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * _.pluck(_.where(users, { 'pets': ['dino'] }), 'user');\n     * // => ['fred']\n     */\n    function where(collection, source) {\n      return filter(collection, baseMatches(source));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the number of milliseconds that have elapsed since the Unix epoch\n     * (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @category Date\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => logs the number of milliseconds it took for the deferred function to be invoked\n     */\n    var now = nativeNow || function() {\n      return new Date().getTime();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it is called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => logs 'done saving!' after the two async saves have completed\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      n = nativeIsFinite(n = +n) ? n : 0;\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that accepts up to `n` arguments ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      if (guard && isIterateeCall(func, n, guard)) {\n        n = undefined;\n      }\n      n = (func && n == null) ? func.length : nativeMax(+n || 0, 0);\n      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it is called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery('#add').on('click', _.before(5, addContactToList));\n     * // => allows adding up to 4 contacts to the list\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and prepends any additional `_.bind` arguments to those provided to the\n     * bound function.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind` this method does not set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var greet = function(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * };\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // using placeholders\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = restParam(function(func, thisArg, partials) {\n      var bitmask = BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bind.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method. Method names may be specified as individual arguments or as arrays\n     * of method names. If no method names are provided all enumerable function\n     * properties, own and inherited, of `object` are bound.\n     *\n     * **Note:** This method does not set the \"length\" property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} [methodNames] The object method names to bind,\n     *  specified as individual method names or arrays of method names.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'onClick': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view);\n     * jQuery('#docs').on('click', view.onClick);\n     * // => logs 'clicked docs' when the element is clicked\n     */\n    var bindAll = restParam(function(object, methodNames) {\n      methodNames = methodNames.length ? baseFlatten(methodNames) : functions(object);\n\n      var index = -1,\n          length = methodNames.length;\n\n      while (++index < length) {\n        var key = methodNames[index];\n        object[key] = createWrapper(object[key], BIND_FLAG, object);\n      }\n      return object;\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` and prepends\n     * any additional `_.bindKey` arguments to those provided to the bound function.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist.\n     * See [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object the method belongs to.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // using placeholders\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = restParam(function(object, key, partials) {\n      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bindKey.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts one or more arguments of `func` that when\n     * called either invokes `func` returning its result, if all `func` arguments\n     * have been provided, or returns a function that accepts one or more of the\n     * remaining `func` arguments, and so on. The arity of `func` may be specified\n     * if `func.length` is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    var curry = createCurry(CURRY_FLAG);\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    var curryRight = createCurry(CURRY_RIGHT_FLAG);\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed invocations. Provide an options object to indicate that `func`\n     * should be invoked on the leading and/or trailing edge of the `wait` timeout.\n     * Subsequent calls to the debounced function return the result of the last\n     * `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the debounced function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=false] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n     *  delayed before it is invoked.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // avoid costly calculations while the window size is in flux\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // invoke `sendMail` when the click event is fired, debouncing subsequent calls\n     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // ensure `batchLog` is invoked once after 1 second of debounced calls\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', _.debounce(batchLog, 250, {\n     *   'maxWait': 1000\n     * }));\n     *\n     * // cancel a debounced call\n     * var todoChanges = _.debounce(batchLog, 1000);\n     * Object.observe(models.todo, todoChanges);\n     *\n     * Object.observe(models, function(changes) {\n     *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {\n     *     todoChanges.cancel();\n     *   }\n     * }, ['delete']);\n     *\n     * // ...at some point `models.todo` is changed\n     * models.todo.completed = true;\n     *\n     * // ...before 1 second has passed `models.todo` is deleted\n     * // which cancels the debounced `todoChanges` call\n     * delete models.todo;\n     */\n    function debounce(func, wait, options) {\n      var args,\n          maxTimeoutId,\n          result,\n          stamp,\n          thisArg,\n          timeoutId,\n          trailingCall,\n          lastCalled = 0,\n          maxWait = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = wait < 0 ? 0 : (+wait || 0);\n      if (options === true) {\n        var leading = true;\n        trailing = false;\n      } else if (isObject(options)) {\n        leading = !!options.leading;\n        maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function cancel() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        if (maxTimeoutId) {\n          clearTimeout(maxTimeoutId);\n        }\n        lastCalled = 0;\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n      }\n\n      function complete(isCalled, id) {\n        if (id) {\n          clearTimeout(id);\n        }\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n        if (isCalled) {\n          lastCalled = now();\n          result = func.apply(thisArg, args);\n          if (!timeoutId && !maxTimeoutId) {\n            args = thisArg = undefined;\n          }\n        }\n      }\n\n      function delayed() {\n        var remaining = wait - (now() - stamp);\n        if (remaining <= 0 || remaining > wait) {\n          complete(trailingCall, maxTimeoutId);\n        } else {\n          timeoutId = setTimeout(delayed, remaining);\n        }\n      }\n\n      function maxDelayed() {\n        complete(trailing, timeoutId);\n      }\n\n      function debounced() {\n        args = arguments;\n        stamp = now();\n        thisArg = this;\n        trailingCall = trailing && (timeoutId || !leading);\n\n        if (maxWait === false) {\n          var leadingCall = leading && !timeoutId;\n        } else {\n          if (!maxTimeoutId && !leading) {\n            lastCalled = stamp;\n          }\n          var remaining = maxWait - (stamp - lastCalled),\n              isCalled = remaining <= 0 || remaining > maxWait;\n\n          if (isCalled) {\n            if (maxTimeoutId) {\n              maxTimeoutId = clearTimeout(maxTimeoutId);\n            }\n            lastCalled = stamp;\n            result = func.apply(thisArg, args);\n          }\n          else if (!maxTimeoutId) {\n            maxTimeoutId = setTimeout(maxDelayed, remaining);\n          }\n        }\n        if (isCalled && timeoutId) {\n          timeoutId = clearTimeout(timeoutId);\n        }\n        else if (!timeoutId && wait !== maxWait) {\n          timeoutId = setTimeout(delayed, wait);\n        }\n        if (leadingCall) {\n          isCalled = true;\n          result = func.apply(thisArg, args);\n        }\n        if (isCalled && !timeoutId && !maxTimeoutId) {\n          args = thisArg = undefined;\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // logs 'deferred' after one or more milliseconds\n     */\n    var defer = restParam(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => logs 'later' after one second\n     */\n    var delay = restParam(function(func, wait, args) {\n      return baseDelay(func, wait, args);\n    });\n\n    /**\n     * Creates a function that returns the result of invoking the provided\n     * functions with the `this` binding of the created function, where each\n     * successive invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow(_.add, square);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the provided functions from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias backflow, compose\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight(square, _.add);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is coerced to a string and used as the\n     * cache key. The `func` is invoked with the `this` binding of the memoized\n     * function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoizing function.\n     * @example\n     *\n     * var upperCase = _.memoize(function(string) {\n     *   return string.toUpperCase();\n     * });\n     *\n     * upperCase('fred');\n     * // => 'FRED'\n     *\n     * // modifying the result cache\n     * upperCase.cache.set('fred', 'BARNEY');\n     * upperCase('fred');\n     * // => 'BARNEY'\n     *\n     * // replacing `_.memoize.Cache`\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'barney' };\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'fred' }\n     *\n     * _.memoize.Cache = WeakMap;\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'barney' }\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result);\n        return result;\n      };\n      memoized.cache = new memoize.Cache;\n      return memoized;\n    }\n\n    /**\n     * Creates a function that runs each argument through a corresponding\n     * transform function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms] The functions to transform\n     * arguments, specified as individual functions or arrays of functions.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var modded = _.modArgs(function(x, y) {\n     *   return [x, y];\n     * }, square, doubled);\n     *\n     * modded(1, 2);\n     * // => [1, 4]\n     *\n     * modded(5, 10);\n     * // => [25, 20]\n     */\n    var modArgs = restParam(function(func, transforms) {\n      transforms = baseFlatten(transforms);\n      if (typeof func != 'function' || !arrayEvery(transforms, baseIsFunction)) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = transforms.length;\n      return restParam(function(args) {\n        var index = nativeMin(args.length, length);\n        while (index--) {\n          args[index] = transforms[index](args[index]);\n        }\n        return func.apply(this, args);\n      });\n    });\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        return !predicate.apply(this, arguments);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first call. The `func` is invoked\n     * with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // `initialize` invokes `createApplication` once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with `partial` arguments prepended\n     * to those provided to the new function. This method is like `_.bind` except\n     * it does **not** alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // using placeholders\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = createPartial(PARTIAL_FLAG);\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to those provided to the new function.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // using placeholders\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = createPartial(PARTIAL_RIGHT_FLAG);\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified indexes where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, 2, 0, 1);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     *\n     * var map = _.rearg(_.map, [1, 0]);\n     * map(function(n) {\n     *   return n * 3;\n     * }, [1, 2, 3]);\n     * // => [3, 6, 9]\n     */\n    var rearg = restParam(function(func, indexes) {\n      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes));\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as an array.\n     *\n     * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.restParam(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function restParam(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            rest = Array(length);\n\n        while (++index < length) {\n          rest[index] = args[start + index];\n        }\n        switch (start) {\n          case 0: return func.call(this, rest);\n          case 1: return func.call(this, args[0], rest);\n          case 2: return func.call(this, args[0], args[1], rest);\n        }\n        var otherArgs = Array(start + 1);\n        index = -1;\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = rest;\n        return func.apply(this, otherArgs);\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the created\n     * function and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).\n     *\n     * **Note:** This method is based on the [spread operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * // with a Promise\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function(array) {\n        return func.apply(this, array);\n      };\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed invocations. Provide an options object to indicate\n     * that `func` should be invoked on the leading and/or trailing edge of the\n     * `wait` timeout. Subsequent calls to the throttled function return the\n     * result of the last `func` call.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the throttled function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=true] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // avoid excessively updating the position while scrolling\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // invoke `renewToken` when the click event is fired, but not more than once every 5 minutes\n     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n     *   'trailing': false\n     * }));\n     *\n     * // cancel a trailing throttled call\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (options === false) {\n        leading = false;\n      } else if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, { 'leading': leading, 'maxWait': +wait, 'trailing': trailing });\n    }\n\n    /**\n     * Creates a function that provides `value` to the wrapper function as its\n     * first argument. Any additional arguments provided to the function are\n     * appended to those provided to the wrapper function. The wrapper is invoked\n     * with the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      wrapper = wrapper == null ? identity : wrapper;\n      return createWrapper(wrapper, PARTIAL_FLAG, undefined, [value], []);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\n     * otherwise they are assigned by reference. If `customizer` is provided it is\n     * invoked to produce the cloned values. If `customizer` returns `undefined`\n     * cloning is handled by the method instead. The `customizer` is bound to\n     * `thisArg` and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var shallow = _.clone(users);\n     * shallow[0] === users[0];\n     * // => true\n     *\n     * var deep = _.clone(users, true);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.clone(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 0\n     */\n    function clone(value, isDeep, customizer, thisArg) {\n      if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {\n        isDeep = false;\n      }\n      else if (typeof isDeep == 'function') {\n        thisArg = customizer;\n        customizer = isDeep;\n        isDeep = false;\n      }\n      return typeof customizer == 'function'\n        ? baseClone(value, isDeep, bindCallback(customizer, thisArg, 1))\n        : baseClone(value, isDeep);\n    }\n\n    /**\n     * Creates a deep clone of `value`. If `customizer` is provided it is invoked\n     * to produce the cloned values. If `customizer` returns `undefined` cloning\n     * is handled by the method instead. The `customizer` is bound to `thisArg`\n     * and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the deep cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var deep = _.cloneDeep(users);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.cloneDeep(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 20\n     */\n    function cloneDeep(value, customizer, thisArg) {\n      return typeof customizer == 'function'\n        ? baseClone(value, true, bindCallback(customizer, thisArg, 1))\n        : baseClone(value, true);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`, else `false`.\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    function gt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    function gte(value, other) {\n      return value >= other;\n    }\n\n    /**\n     * Checks if `value` is classified as an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      return isObjectLike(value) && isArrayLike(value) &&\n        hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n    }\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(function() { return arguments; }());\n     * // => false\n     */\n    var isArray = nativeIsArray || function(value) {\n      return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n    };\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false || (isObjectLike(value) && objToString.call(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    function isDate(value) {\n      return isObjectLike(value) && objToString.call(value) == dateTag;\n    }\n\n    /**\n     * Checks if `value` is a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is empty. A value is considered empty unless it is an\n     * `arguments` object, array, string, or jQuery-like collection with a length\n     * greater than `0` or an object with own enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Array|Object|string} value The value to inspect.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) && (isArray(value) || isString(value) || isArguments(value) ||\n          (isObjectLike(value) && isFunction(value.splice)))) {\n        return !value.length;\n      }\n      return !keys(value).length;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent. If `customizer` is provided it is invoked to compare values.\n     * If `customizer` returns `undefined` comparisons are handled by the method\n     * instead. The `customizer` is bound to `thisArg` and invoked with three\n     * arguments: (value, other [, index|key]).\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. Functions and DOM nodes\n     * are **not** supported. Provide a customizer function to extend support\n     * for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @alias eq\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'fred' };\n     *\n     * object == other;\n     * // => false\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * // using a customizer callback\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqual(array, other, function(value, other) {\n     *   if (_.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/)) {\n     *     return true;\n     *   }\n     * });\n     * // => true\n     */\n    function isEqual(value, other, customizer, thisArg) {\n      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return  result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      return isObjectLike(value) && typeof value.message == 'string' && objToString.call(value) == errorTag;\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on [`Number.isFinite`](http://ecma-international.org/ecma-262/6.0/#sec-number.isfinite).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(10);\n     * // => true\n     *\n     * _.isFinite('10');\n     * // => false\n     *\n     * _.isFinite(true);\n     * // => false\n     *\n     * _.isFinite(Object(10));\n     * // => false\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in older versions of Chrome and Safari which return 'function' for regexes\n      // and Safari 8 equivalents which return 'object' for typed array constructors.\n      return isObject(value) && objToString.call(value) == funcTag;\n    }\n\n    /**\n     * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(1);\n     * // => false\n     */\n    function isObject(value) {\n      // Avoid a V8 JIT bug in Chrome 19-20.\n      // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n      var type = typeof value;\n      return !!value && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Performs a deep comparison between `object` and `source` to determine if\n     * `object` contains equivalent property values. If `customizer` is provided\n     * it is invoked to compare values. If `customizer` returns `undefined`\n     * comparisons are handled by the method instead. The `customizer` is bound\n     * to `thisArg` and invoked with three arguments: (value, other, index|key).\n     *\n     * **Note:** This method supports comparing properties of arrays, booleans,\n     * `Date` objects, numbers, `Object` objects, regexes, and strings. Functions\n     * and DOM nodes are **not** supported. Provide a customizer function to extend\n     * support for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.isMatch(object, { 'age': 40 });\n     * // => true\n     *\n     * _.isMatch(object, { 'age': 36 });\n     * // => false\n     *\n     * // using a customizer callback\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatch(object, source, function(value, other) {\n     *   return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;\n     * });\n     * // => true\n     */\n    function isMatch(object, source, customizer, thisArg) {\n      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n      return baseIsMatch(object, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)\n     * which returns `true` for `undefined` and other non-numeric values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some host objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a native function.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (value == null) {\n        return false;\n      }\n      if (isFunction(value)) {\n        return reIsNative.test(fnToString.call(value));\n      }\n      return isObjectLike(value) && reIsHostCtor.test(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n     * as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isNumber(8.4);\n     * // => true\n     *\n     * _.isNumber(NaN);\n     * // => true\n     *\n     * _.isNumber('8.4');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' || (isObjectLike(value) && objToString.call(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * **Note:** This method assumes objects created by the `Object` constructor\n     * have no inherited enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      var Ctor;\n\n      // Exit early for non `Object` objects.\n      if (!(isObjectLike(value) && objToString.call(value) == objectTag && !isArguments(value)) ||\n          (!hasOwnProperty.call(value, 'constructor') && (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {\n        return false;\n      }\n      // IE < 9 iterates inherited properties before own properties. If the first\n      // iterated property is an object's own property then there are no inherited\n      // enumerable properties.\n      var result;\n      // In most environments an object's own properties are iterated before\n      // its inherited properties. If the last iterated property is an object's\n      // own property then there are no inherited enumerable properties.\n      baseForIn(value, function(subValue, key) {\n        result = key;\n      });\n      return result === undefined || hasOwnProperty.call(value, result);\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    function isRegExp(value) {\n      return isObject(value) && objToString.call(value) == regexpTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' || (isObjectLike(value) && objToString.call(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    function isTypedArray(value) {\n      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n    }\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`, else `false`.\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    function lt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    function lte(value, other) {\n      return value <= other;\n    }\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * (function() {\n     *   return _.toArray(arguments).slice(1);\n     * }(1, 2, 3));\n     * // => [2, 3]\n     */\n    function toArray(value) {\n      var length = value ? getLength(value) : 0;\n      if (!isLength(length)) {\n        return values(value);\n      }\n      if (!length) {\n        return [];\n      }\n      return arrayCopy(value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable\n     * properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return baseCopy(value, keysIn(value));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Recursively merges own enumerable properties of the source object(s), that\n     * don't resolve to `undefined` into the destination object. Subsequent sources\n     * overwrite property assignments of previous sources. If `customizer` is\n     * provided it is invoked to produce the merged values of the destination and\n     * source properties. If `customizer` returns `undefined` merging is handled\n     * by the method instead. The `customizer` is bound to `thisArg` and invoked\n     * with five arguments: (objectValue, sourceValue, key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var users = {\n     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n     * };\n     *\n     * var ages = {\n     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n     * };\n     *\n     * _.merge(users, ages);\n     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n     *\n     * // using a customizer callback\n     * var object = {\n     *   'fruits': ['apple'],\n     *   'vegetables': ['beet']\n     * };\n     *\n     * var other = {\n     *   'fruits': ['banana'],\n     *   'vegetables': ['carrot']\n     * };\n     *\n     * _.merge(object, other, function(a, b) {\n     *   if (_.isArray(a)) {\n     *     return a.concat(b);\n     *   }\n     * });\n     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n     */\n    var merge = createAssigner(baseMerge);\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object. Subsequent sources overwrite property assignments of previous sources.\n     * If `customizer` is provided it is invoked to produce the assigned values.\n     * The `customizer` is bound to `thisArg` and invoked with five arguments:\n     * (objectValue, sourceValue, key, object, source).\n     *\n     * **Note:** This method mutates `object` and is based on\n     * [`Object.assign`](http://ecma-international.org/ecma-262/6.0/#sec-object.assign).\n     *\n     * @static\n     * @memberOf _\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using a customizer callback\n     * var defaults = _.partialRight(_.assign, function(value, other) {\n     *   return _.isUndefined(value) ? other : value;\n     * });\n     *\n     * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var assign = createAssigner(function(object, source, customizer) {\n      return customizer\n        ? assignWith(object, source, customizer)\n        : baseAssign(object, source);\n    });\n\n    /**\n     * Creates an object that inherits from the given `prototype` object. If a\n     * `properties` object is provided its own enumerable properties are assigned\n     * to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties, guard) {\n      var result = baseCreate(prototype);\n      if (guard && isIterateeCall(prototype, properties, guard)) {\n        properties = undefined;\n      }\n      return properties ? baseAssign(result, properties) : result;\n    }\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object for all destination properties that resolve to `undefined`. Once a\n     * property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var defaults = createDefaults(assign, assignDefaults);\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });\n     * // => { 'user': { 'name': 'barney', 'age': 36 } }\n     *\n     */\n    var defaultsDeep = createDefaults(merge, mergeDefaults);\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    var findKey = createFindKey(baseForOwn);\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => returns `pebbles` assuming `_.findKey` returns `barney`\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    var findLastKey = createFindKey(baseForOwnRight);\n\n    /**\n     * Iterates over own and inherited enumerable properties of an object invoking\n     * `iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a', 'b', and 'c' (iteration order is not guaranteed)\n     */\n    var forIn = createForIn(baseFor);\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'c', 'b', and 'a' assuming `_.forIn ` logs 'a', 'b', and 'c'\n     */\n    var forInRight = createForIn(baseForRight);\n\n    /**\n     * Iterates over own enumerable properties of an object invoking `iteratee`\n     * for each property. The `iteratee` is bound to `thisArg` and invoked with\n     * three arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a' and 'b' (iteration order is not guaranteed)\n     */\n    var forOwn = createForOwn(baseForOwn);\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'b' and 'a' assuming `_.forOwn` logs 'a' and 'b'\n     */\n    var forOwnRight = createForOwn(baseForOwnRight);\n\n    /**\n     * Creates an array of function property names from all enumerable properties,\n     * own and inherited, of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @alias methods\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the new array of property names.\n     * @example\n     *\n     * _.functions(_);\n     * // => ['after', 'ary', 'assign', ...]\n     */\n    function functions(object) {\n      return baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the property value at `path` of `object`. If the resolved value is\n     * `undefined` the `defaultValue` is used in its place.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, toPath(path), path + '');\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` is a direct property, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': { 'c': 3 } } };\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b.c');\n     * // => true\n     *\n     * _.has(object, ['a', 'b', 'c']);\n     * // => true\n     */\n    function has(object, path) {\n      if (object == null) {\n        return false;\n      }\n      var result = hasOwnProperty.call(object, path);\n      if (!result && !isKey(path)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        if (object == null) {\n          return false;\n        }\n        path = last(path);\n        result = hasOwnProperty.call(object, path);\n      }\n      return result || (isLength(object.length) && isIndex(path, object.length) &&\n        (isArray(object) || isArguments(object)));\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite property\n     * assignments of previous values unless `multiValue` is `true`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {boolean} [multiValue] Allow multiple values per key.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     *\n     * // with `multiValue`\n     * _.invert(object, true);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function invert(object, multiValue, guard) {\n      if (guard && isIterateeCall(object, multiValue, guard)) {\n        multiValue = undefined;\n      }\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key];\n\n        if (multiValue) {\n          if (hasOwnProperty.call(result, value)) {\n            result[value].push(key);\n          } else {\n            result[value] = [key];\n          }\n        }\n        else {\n          result[value] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    var keys = !nativeKeys ? shimKeys : function(object) {\n      var Ctor = object == null ? undefined : object.constructor;\n      if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n          (typeof object != 'function' && isArrayLike(object))) {\n        return shimKeys(object);\n      }\n      return isObject(object) ? nativeKeys(object) : [];\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      if (object == null) {\n        return [];\n      }\n      if (!isObject(object)) {\n        object = Object(object);\n      }\n      var length = object.length;\n      length = (length && isLength(length) &&\n        (isArray(object) || isArguments(object)) && length) || 0;\n\n      var Ctor = object.constructor,\n          index = -1,\n          isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n          result = Array(length),\n          skipIndexes = length > 0;\n\n      while (++index < length) {\n        result[index] = (index + '');\n      }\n      for (var key in object) {\n        if (!(skipIndexes && isIndex(key, length)) &&\n            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * property of `object` through `iteratee`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    var mapKeys = createObjectMapper(true);\n\n    /**\n     * Creates an object with the same keys as `object` and values generated by\n     * running each own enumerable property of `object` through `iteratee`. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, key, object).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapValues({ 'a': 1, 'b': 2 }, function(n) {\n     *   return n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * // using the `_.property` callback shorthand\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    var mapValues = createObjectMapper();\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable properties of `object` that are not omitted.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to omit, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.omit(object, 'age');\n     * // => { 'user': 'fred' }\n     *\n     * _.omit(object, _.isNumber);\n     * // => { 'user': 'fred' }\n     */\n    var omit = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      if (typeof props[0] != 'function') {\n        var props = arrayMap(baseFlatten(props), String);\n        return pickByArray(object, baseDifference(keysIn(object), props));\n      }\n      var predicate = bindCallback(props[0], props[1], 3);\n      return pickByCallback(object, function(value, key, object) {\n        return !predicate(value, key, object);\n      });\n    });\n\n    /**\n     * Creates a two dimensional array of the key-value pairs for `object`,\n     * e.g. `[[key1, value1], [key2, value2]]`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the new array of key-value pairs.\n     * @example\n     *\n     * _.pairs({ 'barney': 36, 'fred': 40 });\n     * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n     */\n    function pairs(object) {\n      object = toObject(object);\n\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        var key = props[index];\n        result[index] = [key, object[key]];\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties. Property\n     * names may be specified as individual arguments or as arrays of property\n     * names. If `predicate` is provided it is invoked for each property of `object`\n     * picking the properties `predicate` returns truthy for. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to pick, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.pick(object, 'user');\n     * // => { 'user': 'fred' }\n     *\n     * _.pick(object, _.isString);\n     * // => { 'user': 'fred' }\n     */\n    var pick = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      return typeof props[0] == 'function'\n        ? pickByCallback(object, bindCallback(props[0], props[1], 3))\n        : pickByArray(object, baseFlatten(props));\n    });\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a function\n     * it is invoked with the `this` binding of its parent object and its result\n     * is returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a.b.c', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a.b.c', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      var result = object == null ? undefined : object[path];\n      if (result === undefined) {\n        if (object != null && !isKey(path, object)) {\n          path = toPath(path);\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          result = object == null ? undefined : object[last(path)];\n        }\n        result = result === undefined ? defaultValue : result;\n      }\n      return isFunction(result) ? result.call(object) : result;\n    }\n\n    /**\n     * Sets the property value of `path` on `object`. If a portion of `path`\n     * does not exist it is created.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to augment.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, 'x[0].y.z', 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      if (object == null) {\n        return object;\n      }\n      var pathKey = (path + '');\n      path = (object[pathKey] != null || isKey(path, object)) ? [pathKey] : toPath(path);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = path[index];\n        if (isObject(nested)) {\n          if (index == lastIndex) {\n            nested[key] = value;\n          } else if (nested[key] == null) {\n            nested[key] = isIndex(path[index + 1]) ? [] : {};\n          }\n        }\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own enumerable\n     * properties through `iteratee`, with each invocation potentially mutating\n     * the `accumulator` object. The `iteratee` is bound to `thisArg` and invoked\n     * with four arguments: (accumulator, value, key, object). Iteratee functions\n     * may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Array|Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     */\n    function transform(object, iteratee, accumulator, thisArg) {\n      var isArr = isArray(object) || isTypedArray(object);\n      iteratee = getCallback(iteratee, thisArg, 4);\n\n      if (accumulator == null) {\n        if (isArr || isObject(object)) {\n          var Ctor = object.constructor;\n          if (isArr) {\n            accumulator = isArray(object) ? new Ctor : [];\n          } else {\n            accumulator = baseCreate(isFunction(Ctor) ? Ctor.prototype : undefined);\n          }\n        } else {\n          accumulator = {};\n        }\n      }\n      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Creates an array of the own enumerable property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property values\n     * of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Checks if `n` is between `start` and up to but not including, `end`. If\n     * `end` is not specified it is set to `start` with `start` then set to `0`.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} n The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `n` is in the range, else `false`.\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     */\n    function inRange(value, start, end) {\n      start = +start || 0;\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      return value >= nativeMin(start, end) && value < nativeMax(start, end);\n    }\n\n    /**\n     * Produces a random number between `min` and `max` (inclusive). If only one\n     * argument is provided a number between `0` and the given number is returned.\n     * If `floating` is `true`, or either `min` or `max` are floats, a floating-point\n     * number is returned instead of an integer.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} [min=0] The minimum possible value.\n     * @param {number} [max=1] The maximum possible value.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(min, max, floating) {\n      if (floating && isIterateeCall(min, max, floating)) {\n        max = floating = undefined;\n      }\n      var noMin = min == null,\n          noMax = max == null;\n\n      if (floating == null) {\n        if (noMax && typeof min == 'boolean') {\n          floating = min;\n          min = 1;\n        }\n        else if (typeof max == 'boolean') {\n          floating = max;\n          noMax = true;\n        }\n      }\n      if (noMin && noMax) {\n        max = 1;\n        noMax = false;\n      }\n      min = +min || 0;\n      if (noMax) {\n        max = min;\n        min = 0;\n      } else {\n        max = +max || 0;\n      }\n      if (floating || min % 1 || max % 1) {\n        var rand = nativeRandom();\n        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1)))), max);\n      }\n      return baseRandom(min, max);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__foo_bar__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? (word.charAt(0).toUpperCase() + word.slice(1)) : word);\n    });\n\n    /**\n     * Capitalizes the first character of `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('fred');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      string = baseToString(string);\n      return string && (string.charAt(0).toUpperCase() + string.slice(1));\n    }\n\n    /**\n     * Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * to basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = baseToString(string);\n      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search from.\n     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = baseToString(string);\n      target = (target + '');\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : nativeMin(position < 0 ? 0 : (+position || 0), length);\n\n      position -= target.length;\n      return position >= 0 && string.indexOf(target, position) == position;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\", in `string` to\n     * their corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional characters\n     * use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value.\n     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * Backticks are escaped because in Internet Explorer < 9, they can break out\n     * of attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n     * [#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)\n     * for more details.\n     *\n     * When working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)\n     * to reduce XSS vectors.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      // Reset `lastIndex` because in IE < 9 `String#replace` does not.\n      string = baseToString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n     * \"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\n     */\n    function escapeRegExp(string) {\n      string = baseToString(string);\n      return (string && reHasRegExpChars.test(string))\n        ? string.replace(reRegExpChars, escapeRegExpChar)\n        : (string || '(?:)');\n    }\n\n    /**\n     * Converts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__foo_bar__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = baseToString(string);\n      length = +length;\n\n      var strLength = string.length;\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return string;\n      }\n      var mid = (length - strLength) / 2,\n          leftLength = nativeFloor(mid),\n          rightLength = nativeCeil(mid);\n\n      chars = createPadding('', rightLength, chars);\n      return chars.slice(0, leftLength) + string + chars;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padLeft('abc', 6);\n     * // => '   abc'\n     *\n     * _.padLeft('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padLeft('abc', 3);\n     * // => 'abc'\n     */\n    var padLeft = createPadDir();\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padRight('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padRight('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padRight('abc', 3);\n     * // => 'abc'\n     */\n    var padRight = createPadDir(true);\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\n     * in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#E)\n     * of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      // Firefox < 21 and Opera < 15 follow ES3 for `parseInt`.\n      // Chrome fails to trim leading <BOM> whitespace characters.\n      // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.\n      if (guard ? isIterateeCall(string, radix, guard) : radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      string = trim(string);\n      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=0] The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n) {\n      var result = '';\n      string = baseToString(string);\n      n = +n;\n      if (n < 1 || !string || !nativeIsFinite(n)) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        string += string;\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * Converts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--foo-bar');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__foo_bar__');\n     * // => 'Foo Bar'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + (word.charAt(0).toUpperCase() + word.slice(1));\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = baseToString(string);\n      position = position == null\n        ? 0\n        : nativeMin(position < 0 ? 0 : (+position || 0), string.length);\n\n      return string.lastIndexOf(target, position) == position;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is provided it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options] The options object.\n     * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n     * @param {Object} [options.imports] An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.\n     * @param {string} [options.variable] The data object variable name.\n     * @param- {Object} [otherOptions] Enables the legacy `options` param signature.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // using the \"interpolate\" delimiter to create a compiled template\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // using the HTML \"escape\" delimiter to escape data property values\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // using the \"evaluate\" delimiter to execute JavaScript and generate HTML\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the internal `print` function in \"evaluate\" delimiters\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // using the ES delimiter as an alternative to the default \"interpolate\" delimiter\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // using custom template delimiters\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // using backslashes to treat delimiters as plain text\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // using the `imports` option to import `jQuery` as `jq`\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the `sourceURL` option to specify a custom sourceURL for the template\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n     *\n     * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // using the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and a stack trace\n     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, otherOptions) {\n      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (otherOptions && isIterateeCall(string, options, otherOptions)) {\n        options = otherOptions = undefined;\n      }\n      string = baseToString(string);\n      options = assignWith(baseAssign({}, otherOptions || options), settings, assignOwnDefaults);\n\n      var imports = assignWith(baseAssign({}, options.imports), settings.imports, assignOwnDefaults),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products requires returning the `match`\n        // string in order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string), trimmedRightIndex(string) + 1);\n      }\n      chars = (chars + '');\n      return string.slice(charsLeftIndex(string, chars), charsRightIndex(string, chars) + 1);\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimLeft('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimLeft('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimLeft(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string));\n      }\n      return string.slice(charsLeftIndex(string, (chars + '')));\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimRight('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimRight('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimRight(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(0, trimmedRightIndex(string) + 1);\n      }\n      return string.slice(0, charsRightIndex(string, (chars + '')) + 1);\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object|number} [options] The options object or maximum string length.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.trunc('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', 24);\n     * // => 'hi-diddly-ho there, n...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function trunc(string, options, guard) {\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (options != null) {\n        if (isObject(options)) {\n          var separator = 'separator' in options ? options.separator : separator;\n          length = 'length' in options ? (+options.length || 0) : length;\n          omission = 'omission' in options ? baseToString(options.omission) : omission;\n        } else {\n          length = +options || 0;\n        }\n      }\n      string = baseToString(string);\n      if (length >= string.length) {\n        return string;\n      }\n      var end = length - omission.length;\n      if (end < 1) {\n        return omission;\n      }\n      var result = string.slice(0, end);\n      if (separator == null) {\n        return result + omission;\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              newEnd,\n              substring = string.slice(0, end);\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, (reFlags.exec(separator) || '') + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            newEnd = match.index;\n          }\n          result = result.slice(0, newEnd == null ? end : newEnd);\n        }\n      } else if (string.indexOf(separator, end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\n     * corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional HTML\n     * entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = baseToString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      if (guard && isIterateeCall(string, pattern, guard)) {\n        pattern = undefined;\n      }\n      string = baseToString(string);\n      return string.match(pattern || reWords) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function} func The function to attempt.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // avoid throwing errors for invalid selectors\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = restParam(function(func, args) {\n      try {\n        return func.apply(undefined, args);\n      } catch(e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and arguments of the created function. If `func` is a property name the\n     * created callback returns the property value for a given element. If `func`\n     * is an object the created callback returns `true` for elements that contain\n     * the equivalent object properties, otherwise it returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias iteratee\n     * @category Utility\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // wrap to create custom callback shorthands\n     * _.callback = _.wrap(_.callback, function(callback, func, thisArg) {\n     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(func);\n     *   if (!match) {\n     *     return callback(func, thisArg);\n     *   }\n     *   return function(object) {\n     *     return match[2] == 'gt'\n     *       ? object[match[1]] > match[3]\n     *       : object[match[1]] < match[3];\n     *   };\n     * });\n     *\n     * _.filter(users, 'age__gt36');\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     */\n    function callback(func, thisArg, guard) {\n      if (guard && isIterateeCall(func, thisArg, guard)) {\n        thisArg = undefined;\n      }\n      return isObjectLike(func)\n        ? matches(func)\n        : baseCallback(func, thisArg);\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var getter = _.constant(object);\n     *\n     * getter() === object;\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * This method returns the first argument provided to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.identity(object) === object;\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that performs a deep comparison between a given object\n     * and `source`, returning `true` if the given object has equivalent property\n     * values, else `false`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that compares the property value of `path` on a given\n     * object to `value`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * _.find(users, _.matchesProperty('user', 'fred'));\n     * // => { 'user': 'fred' }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, true));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` on a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': _.constant(2) } } },\n     *   { 'a': { 'b': { 'c': _.constant(1) } } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.invoke(_.sortBy(objects, _.method(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    var method = restParam(function(path, args) {\n      return function(object) {\n        return invokePath(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path on `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = restParam(function(object, args) {\n      return function(path) {\n        return invokePath(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable function properties of a source object to the\n     * destination object. If `object` is a function then methods are added to\n     * its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.chain=true] Specify whether the functions added\n     *  are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      if (options == null) {\n        var isObj = isObject(source),\n            props = isObj ? keys(source) : undefined,\n            methodNames = (props && props.length) ? baseFunctions(source, props) : undefined;\n\n        if (!(methodNames ? methodNames.length : isObj)) {\n          methodNames = false;\n          options = source;\n          source = object;\n          object = this;\n        }\n      }\n      if (!methodNames) {\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = true,\n          index = -1,\n          isFunc = isFunction(object),\n          length = methodNames.length;\n\n      if (options === false) {\n        chain = false;\n      } else if (isObject(options) && 'chain' in options) {\n        chain = options.chain;\n      }\n      while (++index < length) {\n        var methodName = methodNames[index],\n            func = source[methodName];\n\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = (function(func) {\n            return function() {\n              var chainAll = this.__chain__;\n              if (chain || chainAll) {\n                var result = object(this.__wrapped__),\n                    actions = result.__actions__ = arrayCopy(this.__actions__);\n\n                actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n                result.__chain__ = chainAll;\n                return result;\n              }\n              return func.apply(object, arrayPush([this.value()], arguments));\n            };\n          }(func));\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      root._ = oldDash;\n      return this;\n    }\n\n    /**\n     * A no-operation function that returns `undefined` regardless of the\n     * arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.noop(object) === undefined;\n     * // => true\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that returns the property value at `path` on a\n     * given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': 2 } } },\n     *   { 'a': { 'b': { 'c': 1 } } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the property value at a given path on `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return baseGet(object, toPath(path), path + '');\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. If `end` is not specified it is\n     * set to `start` with `start` then set to `0`. If `end` is less than `start`\n     * a zero-length range is created unless a negative `step` is specified.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the new array of numbers.\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    function range(start, end, step) {\n      if (step && isIterateeCall(start, end, step)) {\n        end = step = undefined;\n      }\n      start = +start || 0;\n      step = step == null ? 1 : (+step || 0);\n\n      if (end == null) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      // Use `Array(length)` so engines like Chakra and V8 avoid slower modes.\n      // See https://youtu.be/XAqIpGU8ZZk#t=17m25s for more details.\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the iteratee function `n` times, returning an array of the results\n     * of each invocation. The `iteratee` is bound to `thisArg` and invoked with\n     * one argument; (index).\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * var diceRolls = _.times(3, _.partial(_.random, 1, 6, false));\n     * // => [3, 6, 4]\n     *\n     * _.times(3, function(n) {\n     *   mage.castSpell(n);\n     * });\n     * // => invokes `mage.castSpell(n)` three times with `n` of `0`, `1`, and `2`\n     *\n     * _.times(3, function(n) {\n     *   this.cast(n);\n     * }, mage);\n     * // => also invokes `mage.castSpell(n)` three times\n     */\n    function times(n, iteratee, thisArg) {\n      n = nativeFloor(n);\n\n      // Exit early to avoid a JSC JIT bug in Safari 8\n      // where `Array(0)` is treated as `Array(1)`.\n      if (n < 1 || !nativeIsFinite(n)) {\n        return [];\n      }\n      var index = -1,\n          result = Array(nativeMin(n, MAX_ARRAY_LENGTH));\n\n      iteratee = bindCallback(iteratee, thisArg, 1);\n      while (++index < n) {\n        if (index < MAX_ARRAY_LENGTH) {\n          result[index] = iteratee(index);\n        } else {\n          iteratee(index);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is provided the ID is appended to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {string} [prefix] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return baseToString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} augend The first number to add.\n     * @param {number} addend The second number to add.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    function add(augend, addend) {\n      return (+augend || 0) + (+addend || 0);\n    }\n\n    /**\n     * Calculates `n` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Calculates `n` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Gets the maximum value of `collection`. If `collection` is empty or falsey\n     * `-Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => -Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.max(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.max(users, 'age');\n     * // => { 'user': 'fred', 'age': 40 }\n     */\n    var max = createExtremum(gt, NEGATIVE_INFINITY);\n\n    /**\n     * Gets the minimum value of `collection`. If `collection` is empty or falsey\n     * `Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.min(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.min(users, 'age');\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var min = createExtremum(lt, POSITIVE_INFINITY);\n\n    /**\n     * Calculates `n` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Gets the sum of the values in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 6]);\n     * // => 10\n     *\n     * _.sum({ 'a': 4, 'b': 6 });\n     * // => 10\n     *\n     * var objects = [\n     *   { 'n': 4 },\n     *   { 'n': 6 }\n     * ];\n     *\n     * _.sum(objects, function(object) {\n     *   return object.n;\n     * });\n     * // => 10\n     *\n     * // using the `_.property` callback shorthand\n     * _.sum(objects, 'n');\n     * // => 10\n     */\n    function sum(collection, iteratee, thisArg) {\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = undefined;\n      }\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return iteratee.length == 1\n        ? arraySum(isArray(collection) ? collection : toIterable(collection), iteratee)\n        : baseSum(collection, iteratee);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    // Add functions to the `Map` cache.\n    MapCache.prototype['delete'] = mapDelete;\n    MapCache.prototype.get = mapGet;\n    MapCache.prototype.has = mapHas;\n    MapCache.prototype.set = mapSet;\n\n    // Add functions to the `Set` cache.\n    SetCache.prototype.push = cachePush;\n\n    // Assign cache to `_.memoize`.\n    memoize.Cache = MapCache;\n\n    // Add functions that return wrapped values when chaining.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.callback = callback;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.functions = functions;\n    lodash.groupBy = groupBy;\n    lodash.indexBy = indexBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.invert = invert;\n    lodash.invoke = invoke;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.modArgs = modArgs;\n    lodash.negate = negate;\n    lodash.omit = omit;\n    lodash.once = once;\n    lodash.pairs = pairs;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pluck = pluck;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.restParam = restParam;\n    lodash.set = set;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortByAll = sortByAll;\n    lodash.sortByOrder = sortByOrder;\n    lodash.spread = spread;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.times = times;\n    lodash.toArray = toArray;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.union = union;\n    lodash.uniq = uniq;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.where = where;\n    lodash.without = without;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.backflow = flowRight;\n    lodash.collect = map;\n    lodash.compose = flowRight;\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.extend = assign;\n    lodash.iteratee = callback;\n    lodash.methods = functions;\n    lodash.object = zipObject;\n    lodash.select = filter;\n    lodash.tail = rest;\n    lodash.unique = uniq;\n\n    // Add functions to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions that return unwrapped values when chaining.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.deburr = deburr;\n    lodash.endsWith = endsWith;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.findWhere = findWhere;\n    lodash.first = first;\n    lodash.floor = floor;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isBoolean = isBoolean;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isMatch = isMatch;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isString = isString;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.min = min;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padLeft = padLeft;\n    lodash.padRight = padRight;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.sum = sum;\n    lodash.template = template;\n    lodash.trim = trim;\n    lodash.trimLeft = trimLeft;\n    lodash.trimRight = trimRight;\n    lodash.trunc = trunc;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.words = words;\n\n    // Add aliases.\n    lodash.all = every;\n    lodash.any = some;\n    lodash.contains = includes;\n    lodash.eq = isEqual;\n    lodash.detect = find;\n    lodash.foldl = reduce;\n    lodash.foldr = reduceRight;\n    lodash.head = first;\n    lodash.include = includes;\n    lodash.inject = reduce;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!lodash.prototype[methodName]) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), false);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions capable of returning wrapped and unwrapped values when chaining.\n    lodash.sample = sample;\n\n    lodash.prototype.sample = function(n) {\n      if (!this.__chain__ && n == null) {\n        return sample(this.value());\n      }\n      return this.thru(function(value) {\n        return sample(value, n);\n      });\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type string\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        var filtered = this.__filtered__;\n        if (filtered && !index) {\n          return new LazyWrapper(this);\n        }\n        n = n == null ? 1 : nativeMax(nativeFloor(n) || 0, 0);\n\n        var result = this.clone();\n        if (filtered) {\n          result.__takeCount__ = nativeMin(result.__takeCount__, n);\n        } else {\n          result.__views__.push({ 'size': n, 'type': methodName + (result.__dir__ < 0 ? 'Right' : '') });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type != LAZY_MAP_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee, thisArg) {\n        var result = this.clone();\n        result.__iteratees__.push({ 'iteratee': getCallback(iteratee, thisArg, 1), 'type': type });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.first` and `_.last`.\n    arrayEach(['first', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.rest`.\n    arrayEach(['initial', 'rest'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.pluck` and `_.where`.\n    arrayEach(['pluck', 'where'], function(methodName, index) {\n      var operationName = index ? 'filter' : 'map',\n          createCallback = index ? baseMatches : property;\n\n      LazyWrapper.prototype[methodName] = function(value) {\n        return this[operationName](createCallback(value));\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.reject = function(predicate, thisArg) {\n      predicate = getCallback(predicate, thisArg, 1);\n      return this.filter(function(value) {\n        return !predicate(value);\n      });\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = start == null ? 0 : (+start || 0);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = (+end || 0);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate, thisArg) {\n      return this.reverse().takeWhile(predicate, thisArg).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(POSITIVE_INFINITY);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|map|reject)|While$/.test(methodName),\n          retUnwrapped = /^(?:first|last)$/.test(methodName),\n          lodashFunc = lodash[retUnwrapped ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName];\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var args = retUnwrapped ? [1] : arguments,\n            chainAll = this.__chain__,\n            value = this.__wrapped__,\n            isHybrid = !!this.__actions__.length,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var interceptor = function(value) {\n          return (retUnwrapped && chainAll)\n            ? lodashFunc(value, 1)[0]\n            : lodashFunc.apply(undefined, arrayPush([value], args));\n        };\n\n        var action = { 'func': thru, 'args': [interceptor], 'thisArg': undefined },\n            onlyLazy = isLazy && !isHybrid;\n\n        if (retUnwrapped && !chainAll) {\n          if (onlyLazy) {\n            value = value.clone();\n            value.__actions__.push(action);\n            return func.call(value);\n          }\n          return lodashFunc.call(undefined, this.value())[0];\n        }\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push(action);\n          return new LodashWrapper(result, chainAll);\n        }\n        return this.thru(interceptor);\n      };\n    });\n\n    // Add `Array` and `String` methods to `lodash.prototype`.\n    arrayEach(['join', 'pop', 'push', 'replace', 'shift', 'sort', 'splice', 'split', 'unshift'], function(methodName) {\n      var func = (/^(?:replace|split)$/.test(methodName) ? stringProto : arrayProto)[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:join|pop|replace|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          return func.apply(this.value(), args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(value, args);\n        });\n      };\n    });\n\n    // Map minified function names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name,\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{ 'name': 'wrapper', 'func': undefined }];\n\n    // Add functions to the lazy wrapper.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chaining functions to the `lodash` wrapper.\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.concat = wrapperConcat;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toString = wrapperToString;\n    lodash.prototype.run = lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add function aliases to the `lodash` wrapper.\n    lodash.prototype.collect = lodash.prototype.map;\n    lodash.prototype.head = lodash.prototype.first;\n    lodash.prototype.select = lodash.prototype.filter;\n    lodash.prototype.tail = lodash.prototype.rest;\n\n    return lodash;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers like r.js check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose lodash to the global object when an AMD loader is present to avoid\n    // errors in cases where lodash is loaded by a script tag and not intended\n    // as an AMD module. See http://requirejs.org/docs/errors.html#mismatch for\n    // more details.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeExports && freeModule) {\n    // Export for Node.js or RingoJS.\n    if (moduleExports) {\n      (freeModule.exports = _)._ = _;\n    }\n    // Export for Rhino with CommonJS support.\n    else {\n      freeExports._ = _;\n    }\n  }\n  else {\n    // Export for a browser or Rhino.\n    root._ = _;\n  }\n}.call(this));\n"]}